
{
	"scope":"condition pop",
	"completions":
	[
		{ "trigger": "happiness	Compares pop happiness", "contents": "happiness = $1" },
		{ "trigger": "has_trait	checks if an empire's dominant species, pop, or leader has a certain Trait", "contents": "has_trait = $1" },
		{ "trigger": "has_ethic	checks if an empire's dominant species has a certain Ethic", "contents": "has_ethic = $1" },
		{ "trigger": "is_same_species	checks if a pop or empire is of the same species as another pop or empire", "contents": "is_same_species = $1" },
		{ "trigger": "distance	Compares the min/max distance to a target with a value", "contents": "distance = {\n\t$1\n }" },
		{ "trigger": "is_same_species_class	checks if a pop or empire is of the same species class as another pop or empire", "contents": "is_same_species_class = $1" },
		{ "trigger": "free_leader_slots	Compares the number of free leader slots", "contents": "free_leader_slots = $1" },
		{ "trigger": "has_pop_flag	Checks if a pop has a specified flag", "contents": "has_pop_flag = $1" },
		{ "trigger": "has_global_flag	Checks a global trigger", "contents": "has_global_flag = $1" },
		{ "trigger": "pop_has_ethic	checks if a pop has a certain Ethic", "contents": "pop_has_ethic = $1" },
		{ "trigger": "pop_has_trait	checks if a pop has a certain trait", "contents": "pop_has_trait = $1" },
		{ "trigger": "is_enslaved	checks if a pop is enslaved", "contents": "is_enslaved = $1" },
		{ "trigger": "is_being_purged	checks if a pop is being exterminated", "contents": "is_being_purged = $1" },
		{ "trigger": "is_pop	checks if a pop is of the same as the scope", "contents": "is_pop = $1" },
		{ "trigger": "is_species_class	Checks if the founder species of a country, or a pop is of a specific species", "contents": "is_species_class = $1" },
		{ "trigger": "is_sentient	checks if a pop is sentient", "contents": "is_sentient = $1" },
		{ "trigger": "is_preventing_anomaly	checks if a planet is currently preventing anomalies", "contents": "is_preventing_anomaly = $1" },
		{ "trigger": "is_rim_system	checks if a system is on the galactic rim", "contents": "is_rim_system = $1" },
		{ "trigger": "has_modifier	checks if scope object has a modifier", "contents": "has_modifier = $1" },
		{ "trigger": "num_ethics	compares the number of ethics with a value", "contents": "num_ethics = $1" },
		{ "trigger": "num_traits	compares the number of traits with a value", "contents": "num_traits = $1" },
		{ "trigger": "member_of_faction	Checks if pop is a member of a faction ( targets yes/no/specific faction )", "contents": "member_of_faction = $1" },
		{ "trigger": "has_pop_faction_flag	checks if a pop faction has a specified flag", "contents": "has_pop_faction_flag = $1" },
		{ "trigger": "opposing_ethics_divergence	Compares the opposing ethics divergence.", "contents": "opposing_ethics_divergence = {\n\t$1\n }" },
		{ "trigger": "is_species	Checks if the founder species of a country, or a pop is of a specific species", "contents": "is_species = $1" },
		{ "trigger": "is_growing	Checks if a pop is growing", "contents": "is_growing = $1" },
		{ "trigger": "is_colony_pop	Checks if a pop is a colony pop", "contents": "is_colony_pop = $1" },
		{ "trigger": "is_subspecies	checks if a pop or empire is a subspecies of the same species as another pop or empire", "contents": "is_subspecies = $1" },
		{ "trigger": "is_robot_pop	Checks if the pop is of a robotic species class.", "contents": "is_robot_pop = $1" },
		{ "trigger": "species_portrait	Checks if a species uses a certain portrait.", "contents": "species_portrait = $1" },
		{ "trigger": "is_proposing_war_demands	Checks if currently proposing wardemands or handling existing wardemands", "contents": "is_proposing_war_demands = $1" },
		{ "trigger": "if	a conditional trigger", "contents": "if = {\n\t$1\n }" },
		{ "trigger": "logged_in_to_pdx_account	Checks if the local human is logged in to a Pdx account. This WILL cause an out of sync if used for anything that can change the game state", "contents": "logged_in_to_pdx_account = $1" },
		{ "trigger": "and	all inside trigger must be true", "contents": "and = {\n\t$1\n }" },
		{ "trigger": "or	at least one entry inside trigger must be true", "contents": "or = {\n\t$1\n }" },
		{ "trigger": "not	negates content of trigger", "contents": "not = {\n\t$1\n }" },
		{ "trigger": "hidden_trigger	hides the tooltip for the effects within", "contents": "hidden_trigger = {\n\t$1\n }" },
		{ "trigger": "always	either always false or true", "contents": "always = $1" },
		{ "trigger": "any_country	Trigger Scope for any country", "contents": "any_country = $1" },
		{ "trigger": "any_planet	any planet in a solar system", "contents": "any_planet = $1" },
		{ "trigger": "any_ship	any ship in the game", "contents": "any_ship = $1" },
		{ "trigger": "any_system	any system trigger", "contents": "any_system = $1" },
		{ "trigger": "is_multiplayer	checks if the game is running in multiplayer", "contents": "is_multiplayer = $1" },
		{ "trigger": "exists	checks for object existance", "contents": "exists = $1" },
		{ "trigger": "any_rim_system	switches scope to and goes through each rim system", "contents": "any_rim_system = $1" },
		{ "trigger": "switch	Switches between scopes", "contents": "switch = {\n\t$1\n }" },
		{ "trigger": "any_ship_in_system	any ship in system", "contents": "any_ship_in_system = $1" },
		{ "trigger": "is_same_value	checks if two scopes have the same value", "contents": "is_same_value = $1" },
		{ "trigger": "is_scope_valid	Checks if the current scope is valid", "contents": "is_scope_valid = $1" },
		{ "trigger": "closest_system	switches scope to closest system that passes limit", "contents": "closest_system = $1" },
		{ "trigger": "is_ironman	Check if current game is ironman.", "contents": "is_ironman = $1" },
		{ "trigger": "custom_tooltip_fail	shows custom text when trigger is failing", "contents": "custom_tooltip_fail = {\n\t$1\n }" },
		{ "trigger": "years_passed	compares the number of years that have passed since game start with a value", "contents": "years_passed = $1" },
		{ "trigger": "host_has_dlc	Checks if the host has a certain dlc enabled", "contents": "host_has_dlc = $1" },
		{ "trigger": "local_has_dlc	Checks if the host has a certain dlc enabled", "contents": "local_has_dlc = $1" },
		{ "trigger": "nor	negates content of trigger", "contents": "nor = $1" },
		{ "trigger": "nand	negates content of trigger", "contents": "nand = $1" },
		{ "trigger": "text	shows custom text", "contents": "text = $1" },
		{ "trigger": "custom_tooltip	shows a custom tooltip for the effects within", "contents": "custom_tooltip = {\n\t$1\n }" },
		{ "trigger": "members	compares the number of alliance members", "contents": "members = $1" },
		{ "trigger": "any_ambient_object	any ambient object trigger", "contents": "any_ambient_object = $1" },
		{ "trigger": "any_member	any member in an alliance", "contents": "any_member = $1" }
	]
}