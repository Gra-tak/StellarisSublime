
{
	"scope":"block.effect block.Fleet",
	"completions":
	[
		{ "trigger": "distance	Compares the min/max distance to a target with a value", "contents": "distance" },
		{ "trigger": "has_fleet_flag	Checks if a fleet has a specified flag", "contents": "has_fleet_flag" },
		{ "trigger": "is_ship_class	checks if a ship is a specified class", "contents": "is_ship_class" },
		{ "trigger": "is_ship_size	checks if a ship is a specified size", "contents": "is_ship_size" },
		{ "trigger": "is_inside_nebula	checks if a planet/ship is inside a nebula", "contents": "is_inside_nebula" },
		{ "trigger": "is_inside_border	checks if a planet/ship/fleet is inside the border of the specified country", "contents": "is_inside_border" },
		{ "trigger": "free_leader_slots	Compares the number of free leader slots", "contents": "free_leader_slots" },
		{ "trigger": "has_global_flag	Checks a global trigger", "contents": "has_global_flag" },
		{ "trigger": "check_variable	Compares the variable value", "contents": "check_variable" },
		{ "trigger": "is_disabled	checks if a ship or fleet is disabled", "contents": "is_disabled" },
		{ "trigger": "is_preventing_anomaly	checks if a planet is currently preventing anomalies", "contents": "is_preventing_anomaly" },
		{ "trigger": "is_rim_system	checks if a system is on the galactic rim", "contents": "is_rim_system" },
		{ "trigger": "has_mission	checks if a fleet has a certain mission", "contents": "has_mission" },
		{ "trigger": "num_ships	checks if a country has the said number of ships", "contents": "num_ships" },
		{ "trigger": "mission_progress	checks if a mission has a certain progress", "contents": "mission_progress" },
		{ "trigger": "sector_controlled	Checks if the planet/fleet is controlled by the sector", "contents": "sector_controlled" },
		{ "trigger": "count_ships	compares number of ships in a fleet that matches the [limit = {..}]", "contents": "count_ships" },
		{ "trigger": "has_fleet_order	checks if a ship or a fleet has a fleet order", "contents": "has_fleet_order" },
		{ "trigger": "has_ground_support_stance	checks if a fleet has a certain bombardment stance", "contents": "has_ground_support_stance" },
		{ "trigger": "is_being_repaired	Checks if a fleet or ship is being repaired", "contents": "is_being_repaired" },
		{ "trigger": "is_in_combat	Checks if a fleet or ship is being repaired", "contents": "is_in_combat" },
		{ "trigger": "fleet_size	Checks fleet size", "contents": "fleet_size" },
		{ "trigger": "has_spaceport_module	Checks if a spaceport has a module upgrade", "contents": "has_spaceport_module" },
		{ "trigger": "has_free_spaceport_module_slot	Checks if a spaceport has a free module slot", "contents": "has_free_spaceport_module_slot" },
		{ "trigger": "is_spaceport_module_slot_free	Checks if a specific spaceport module slot is free", "contents": "is_spaceport_module_slot_free" },
		{ "trigger": "can_build_spaceport_module	Checks if a spaceport is allowed to build a specific module upgrade", "contents": "can_build_spaceport_module" },
		{ "trigger": "num_free_spaceport_module_slots	Compares the parameter to the amount of free spaceport module slots", "contents": "num_free_spaceport_module_slots" },
		{ "trigger": "num_spaceport_modules	Compares the parameter to the amount of spaceport modules", "contents": "num_spaceport_modules" },
		{ "trigger": "is_proposing_war_demands	Checks if currently proposing wardemands or handling existing wardemands", "contents": "is_proposing_war_demands" }
	]
}