
{
	"scope":"effect country",
	"completions":
	[
		{ "trigger": "tooltip	just a tooltip", "contents": "tooltip = {\n\t$1\n }" },
		{ "trigger": "country_event	fires a Country event", "contents": "country_event = {\n\t$1\n }" },
		{ "trigger": "change_country_flag	changes the flag of a country", "contents": "change_country_flag = {\n\t$1\n }" },
		{ "trigger": "random_neighbor_country	Picks a random neighbor country", "contents": "random_neighbor_country = $1" },
		{ "trigger": "every_owned_planet	switches Scope to and goes through all owned planets", "contents": "every_owned_planet = $1" },
		{ "trigger": "random_owned_planet	picks a random owned planet", "contents": "random_owned_planet = $1" },
		{ "trigger": "every_controlled_planet	switches Scope to and goes through all controlled planets", "contents": "every_controlled_planet = $1" },
		{ "trigger": "random_controlled_planet	picks a random controlled planet", "contents": "random_controlled_planet = $1" },
		{ "trigger": "create_ship_design	Creates a new ship design", "contents": "create_ship_design = {\n\t$1\n }" },
		{ "trigger": "change_government	Change government in Empire.", "contents": "change_government = $1" },
		{ "trigger": "add_energy	Adds a sum of energy to a country", "contents": "add_energy = $1" },
		{ "trigger": "add_minerals	Adds Minerals to a planet, tile or country", "contents": "add_minerals = $1" },
		{ "trigger": "every_war_defender	switches Scope to and goes through all defenders in a war with a specified enemy", "contents": "every_war_defender = $1" },
		{ "trigger": "give_technology	Gives a specific tech to an empire.", "contents": "give_technology = $1" },
		{ "trigger": "enable_special_project	Enables a special research project for a country", "contents": "enable_special_project = {\n\t$1\n }" },
		{ "trigger": "add_physics_research	Adds stored Physics research points to a county", "contents": "add_physics_research = $1" },
		{ "trigger": "add_society_research	Adds stored Society research points to a county", "contents": "add_society_research = $1" },
		{ "trigger": "add_engineering_research	Adds stored Engineering research points to a county", "contents": "add_engineering_research = $1" },
		{ "trigger": "set_country_flag	Sets a flag on a country", "contents": "set_country_flag = $1" },
		{ "trigger": "remove_country_flag	Removes a flag from a country", "contents": "remove_country_flag = $1" },
		{ "trigger": "every_owned_ship	switches Scope to and goes through all owned ships", "contents": "every_owned_ship = $1" },
		{ "trigger": "random_owned_ship	picks a random owned ship", "contents": "random_owned_ship = $1" },
		{ "trigger": "set_primitive	Sets primitive status for a country", "contents": "set_primitive = $1" },
		{ "trigger": "every_owned_pop	switches scope to pop and goes through all pops on planet or in country", "contents": "every_owned_pop = $1" },
		{ "trigger": "set_name	changes the name of a scope target", "contents": "set_name = $1" },
		{ "trigger": "add_modifier	Gives a specific modifier to a planet.", "contents": "add_modifier = {\n\t$1\n }" },
		{ "trigger": "create_leader	Creates a new leader", "contents": "create_leader = {\n\t$1\n }" },
		{ "trigger": "destroy_country	Removes a flag from a country", "contents": "destroy_country = $1" },
		{ "trigger": "set_variable	Sets a variable value", "contents": "set_variable = {\n\t$1\n }" },
		{ "trigger": "change_variable	Changes a variable value", "contents": "change_variable = {\n\t$1\n }" },
		{ "trigger": "random_planet_within_border	Picks a random planet within country border", "contents": "random_planet_within_border = $1" },
		{ "trigger": "add_influence	Adds influence to a county", "contents": "add_influence = $1" },
		{ "trigger": "declare_war	Declare A War.", "contents": "declare_war = $1" },
		{ "trigger": "set_primitive_age	Sets a primitive age on a country", "contents": "set_primitive_age = $1" },
		{ "trigger": "random_system_within_border	Picks a random system within border", "contents": "random_system_within_border = $1" },
		{ "trigger": "random_army_within_country	Executes on a random army belonging to country", "contents": "random_army_within_country = $1" },
		{ "trigger": "set_advisor_active	activate or deactivate an advisor", "contents": "set_advisor_active = $1" },
		{ "trigger": "set_tutorial_level	changes the tutorial level of a human of a country.", "contents": "set_tutorial_level = $1" },
		{ "trigger": "begin_event_chain	begins an event chain.", "contents": "begin_event_chain = {\n\t$1\n }" },
		{ "trigger": "end_event_chain	ends an event chain.", "contents": "end_event_chain = $1" },
		{ "trigger": "modify_species	Creates a new modified species", "contents": "modify_species = {\n\t$1\n }" },
		{ "trigger": "add_opinion_modifier	Gives an opinion modifier to an empire.", "contents": "add_opinion_modifier = {\n\t$1\n }" },
		{ "trigger": "establish_contact	Country establishes contact with another country.", "contents": "establish_contact = {\n\t$1\n }" },
		{ "trigger": "set_faction_hostility	Sets hostility stance of a faction", "contents": "set_faction_hostility = {\n\t$1\n }" },
		{ "trigger": "add_event_chain_counter	adds amount to event chain counter.", "contents": "add_event_chain_counter = {\n\t$1\n }" },
		{ "trigger": "create_point_of_interest	Creates point of interest", "contents": "create_point_of_interest = {\n\t$1\n }" },
		{ "trigger": "remove_point_of_interest	removed point of interest.", "contents": "remove_point_of_interest = $1" },
		{ "trigger": "set_relation_flag	sets a relation flag.", "contents": "set_relation_flag = {\n\t$1\n }" },
		{ "trigger": "remove_relation_flag	removes a relation flag.", "contents": "remove_relation_flag = {\n\t$1\n }" },
		{ "trigger": "kill_leader	Kills leaders of specified types. kill_leader = { type = general type = scientist etc. }", "contents": "kill_leader = {\n\t$1\n }" },
		{ "trigger": "assign_leader	Assigns a leader to either a fleet, army, or pop faction", "contents": "assign_leader = $1" },
		{ "trigger": "country_add_ethic	Adds an ethic to a country", "contents": "country_add_ethic = $1" },
		{ "trigger": "country_remove_ethic	Removes an ethic from a country", "contents": "country_remove_ethic = $1" },
		{ "trigger": "set_timed_country_flag	Sets a timed flag on a country", "contents": "set_timed_country_flag = {\n\t$1\n }" },
		{ "trigger": "set_timed_relation_flag	Sets a timed relation flag", "contents": "set_timed_relation_flag = {\n\t$1\n }" },
		{ "trigger": "every_planet_within_border	Executes on every planet within country border", "contents": "every_planet_within_border = $1" },
		{ "trigger": "every_army_within_country	Executes on all armies belonging to country", "contents": "every_army_within_country = $1" },
		{ "trigger": "observation_outpost	Picks the observation station", "contents": "observation_outpost = $1" },
		{ "trigger": "remove_modifier	Removes a specific modifier from a planet.", "contents": "remove_modifier = $1" },
		{ "trigger": "set_country_type	Changes country type", "contents": "set_country_type = $1" },
		{ "trigger": "add_ship_design	Adds a ship design to a country!", "contents": "add_ship_design = $1" },
		{ "trigger": "create_pop_faction	creates a pop faction", "contents": "create_pop_faction = {\n\t$1\n }" },
		{ "trigger": "set_graphical_culture	Sets country graphical culture", "contents": "set_graphical_culture = $1" },
		{ "trigger": "enable_faction_of_type	forces a country to evaluate potential factions of a specific type right now. this would otherwise occur once a month", "contents": "enable_faction_of_type = $1" },
		{ "trigger": "clear_uncharted_space	Clears US for country", "contents": "clear_uncharted_space = {\n\t$1\n }" },
		{ "trigger": "every_owned_leader	switches Scope to and goes through all owned leader", "contents": "every_owned_leader = $1" },
		{ "trigger": "random_owned_leader	picks a random owned leader", "contents": "random_owned_leader = $1" },
		{ "trigger": "establish_communications	Establish communications between empires.", "contents": "establish_communications = $1" },
		{ "trigger": "add_monthly_resource_mult	Adds multiple amount of monthly income of resource to country", "contents": "add_monthly_resource_mult = {\n\t$1\n }" },
		{ "trigger": "add_research_option	Gives a specific tech to an empire and makes it always available for research.", "contents": "add_research_option = $1" },
		{ "trigger": "set_heir	Change the country heir.", "contents": "set_heir = $1" },
		{ "trigger": "declare_white_peace_with	Declare white peace with target country.", "contents": "declare_white_peace_with = $1" },
		{ "trigger": "leave_alliance	Leave any alliance/federation with country", "contents": "leave_alliance = $1" },
		{ "trigger": "create_sector	Creates a sector", "contents": "create_sector = {\n\t$1\n }" },
		{ "trigger": "random_owned_pop	Picks a random pop", "contents": "random_owned_pop = $1" },
		{ "trigger": "set_policy	Sets a policy to a specific value", "contents": "set_policy = {\n\t$1\n }" },
		{ "trigger": "add_tech_progress	Gives a specific modifier to a planet.", "contents": "add_tech_progress = {\n\t$1\n }" },
		{ "trigger": "random_sector	Executes on a random sector in the country", "contents": "random_sector = $1" },
		{ "trigger": "every_sector	Executes on every sector in the country", "contents": "every_sector = $1" },
		{ "trigger": "random_owned_fleet	switches Scope to and goes through random owned fleet", "contents": "random_owned_fleet = $1" },
		{ "trigger": "set_aggro_range	Sets aggro range on a fleet or a country", "contents": "set_aggro_range = $1" },
		{ "trigger": "set_aggro_range_measure_from	Sets where aggro range is measured from on a fleet or a country. valid targets: self, return_point", "contents": "set_aggro_range_measure_from = $1" },
		{ "trigger": "establish_communications_no_message	Establish communications between empires.", "contents": "establish_communications_no_message = $1" },
		{ "trigger": "set_subject_of	sets the scope country's overlord to target", "contents": "set_subject_of = {\n\t$1\n }" },
		{ "trigger": "abort_special_project	Aborts a special research project for a country", "contents": "abort_special_project = {\n\t$1\n }" },
		{ "trigger": "exile_leader_as	Exiles a leader and saves him associated to a custom name", "contents": "exile_leader_as = $1" },
		{ "trigger": "set_leader	Sets a leader from a previously exiled leader associated by a custom name", "contents": "set_leader = $1" },
		{ "trigger": "set_federation_leader	Sets a country to lead a federation", "contents": "set_federation_leader = $1" },
		{ "trigger": "remove_opinion_modifier	Removes an opinion modifier to an empire.", "contents": "remove_opinion_modifier = {\n\t$1\n }" },
		{ "trigger": "add_war_demand	Adds a war demand to a rebel country", "contents": "add_war_demand = {\n\t$1\n }" },
		{ "trigger": "every_pop_faction	Executes on every pop faction of country", "contents": "every_pop_faction = $1" },
		{ "trigger": "random_pop_faction	Executes on a random pop faction of country", "contents": "random_pop_faction = $1" },
		{ "trigger": "add_threat	Adds threat", "contents": "add_threat = {\n\t$1\n }" },
		{ "trigger": "remove_sector	Removes a sector.", "contents": "remove_sector = $1" },
		{ "trigger": "change_dominant_species	Changes the dominant species of the current Country", "contents": "change_dominant_species = $1" },
		{ "trigger": "create_military_fleet	Creates a military fleet with the designs of a specified country.", "contents": "create_military_fleet = {\n\t$1\n }" },
		{ "trigger": "hidden_effect	Effect not shown in tooltips", "contents": "hidden_effect = {\n\t$1\n }" },
		{ "trigger": "custom_tooltip	just a tooltip", "contents": "custom_tooltip = {\n\t$1\n }" },
		{ "trigger": "if	a conditional effect", "contents": "if = {\n\t$1\n }" },
		{ "trigger": "random	a random effect", "contents": "random = {\n\t$1\n }" },
		{ "trigger": "random_list	a random effect", "contents": "random_list = {\n\t$1\n }" },
		{ "trigger": "create_species	Creates a new species", "contents": "create_species = {\n\t$1\n }" },
		{ "trigger": "create_country	Creates a new country", "contents": "create_country = {\n\t$1\n }" },
		{ "trigger": "create_fleet	Creates a new fleet", "contents": "create_fleet = {\n\t$1\n }" },
		{ "trigger": "random_country	Picks a random country", "contents": "random_country = $1" },
		{ "trigger": "remove_global_flag	Removes a flag from a country", "contents": "remove_global_flag = $1" },
		{ "trigger": "set_variable	Sets a variable value", "contents": "set_variable = {\n\t$1\n }" },
		{ "trigger": "change_variable	Changes a variable value", "contents": "change_variable = {\n\t$1\n }" },
		{ "trigger": "set_global_flag	Sets a global flag", "contents": "set_global_flag = $1" },
		{ "trigger": "every_country	fires a Country event", "contents": "every_country = $1" },
		{ "trigger": "every_ship	fires a Ship event", "contents": "every_ship = $1" },
		{ "trigger": "every_planet	Executes on every planet", "contents": "every_planet = $1" },
		{ "trigger": "save_event_target_as	save an event target", "contents": "save_event_target_as = $1" },
		{ "trigger": "save_global_event_target_as	save a global event target", "contents": "save_global_event_target_as = $1" },
		{ "trigger": "clear_global_event_target	clear a global event target", "contents": "clear_global_event_target = $1" },
		{ "trigger": "clear_global_event_targets	clear all global event targets", "contents": "clear_global_event_targets = $1" },
		{ "trigger": "break	break execution of effects", "contents": "break = $1" },
		{ "trigger": "while	repeats contained effects until limit fails or count is reached", "contents": "while = {\n\t$1\n }" },
		{ "trigger": "destroy_fleet	Destroys fleet on the right side of =", "contents": "destroy_fleet = $1" },
		{ "trigger": "create_ambient_object	Creates a new ambient object of type <type> at location <location>", "contents": "create_ambient_object = {\n\t$1\n }" },
		{ "trigger": "destroy_ambient_object	Destroys an ambient object", "contents": "destroy_ambient_object = $1" },
		{ "trigger": "set_timed_global_flag	Sets a timed global flag", "contents": "set_timed_global_flag = {\n\t$1\n }" },
		{ "trigger": "switch	Switches effect based on triggers", "contents": "switch = {\n\t$1\n }" },
		{ "trigger": "closest_system	switches scope to closest system that passes limit", "contents": "closest_system = $1" },
		{ "trigger": "random_planet	Executes on a random planet", "contents": "random_planet = $1" },
		{ "trigger": "random_system	Picks a random system", "contents": "random_system = $1" },
		{ "trigger": "every_rim_system	Executes on every system on the galactic rim", "contents": "every_rim_system = $1" },
		{ "trigger": "random_rim_system	Executes on a random system on the galactic rim", "contents": "random_rim_system = $1" },
		{ "trigger": "random_ambient_object	executes effects on every ambient object that passes limit", "contents": "random_ambient_object = $1" },
		{ "trigger": "every_ambient_object	executes effects on every ambient object that passes limit", "contents": "every_ambient_object = $1" }
	]
}