
{
	"scope":"condition leader",
	"completions":
	[
		{ "trigger": "gender	Checks the gender of a leader", "contents": "gender = $1" },
		{ "trigger": "has_level	Checks if leader has at least specified level of specified skill", "contents": "has_level = $1" },
		{ "trigger": "leader_class	checks if a leader is a specific type", "contents": "leader_class = {\n\t$1\n }" },
		{ "trigger": "is_researching_area	checks if a leader is researching a specific area", "contents": "is_researching_area = $1" },
		{ "trigger": "has_leader_flag	checks if a leader has a specified flag", "contents": "has_leader_flag = $1" },
		{ "trigger": "leader_of_faction	Checks if leader is the leader of a faction ( targets yes/no/specific faction )", "contents": "leader_of_faction = $1" },
		{ "trigger": "has_skill	Checks level of skill for a leader", "contents": "has_skill = $1" },
		{ "trigger": "has_experience	Checks amount of experience for a leader", "contents": "has_experience = $1" },
		{ "trigger": "has_mandate	Checks if a leader has mandate <yes/no/mandate_key>", "contents": "has_mandate = $1" },
		{ "trigger": "if	a conditional trigger", "contents": "if = {\n\t$1\n }" },
		{ "trigger": "logged_in_to_pdx_account	Checks if the local human is logged in to a Pdx account. This WILL cause an out of sync if used for anything that can change the game state", "contents": "logged_in_to_pdx_account = $1" },
		{ "trigger": "and	all inside trigger must be true", "contents": "and = {\n\t$1\n }" },
		{ "trigger": "or	at least one entry inside trigger must be true", "contents": "or = {\n\t$1\n }" },
		{ "trigger": "not	negates content of trigger", "contents": "not = {\n\t$1\n }" },
		{ "trigger": "hidden_trigger	hides the tooltip for the effects within", "contents": "hidden_trigger = {\n\t$1\n }" },
		{ "trigger": "always	either always false or true", "contents": "always = $1" },
		{ "trigger": "any_country	Trigger Scope for any country", "contents": "any_country = $1" },
		{ "trigger": "any_planet	any planet in a solar system", "contents": "any_planet = $1" },
		{ "trigger": "any_ship	any ship in the game", "contents": "any_ship = $1" },
		{ "trigger": "any_system	any system trigger", "contents": "any_system = $1" },
		{ "trigger": "is_multiplayer	checks if the game is running in multiplayer", "contents": "is_multiplayer = $1" },
		{ "trigger": "exists	checks for object existance", "contents": "exists = $1" },
		{ "trigger": "any_rim_system	switches scope to and goes through each rim system", "contents": "any_rim_system = $1" },
		{ "trigger": "switch	Switches between scopes", "contents": "switch = {\n\t$1\n }" },
		{ "trigger": "any_ship_in_system	any ship in system", "contents": "any_ship_in_system = $1" },
		{ "trigger": "is_same_value	checks if two scopes have the same value", "contents": "is_same_value = $1" },
		{ "trigger": "is_scope_valid	Checks if the current scope is valid", "contents": "is_scope_valid = $1" },
		{ "trigger": "closest_system	switches scope to closest system that passes limit", "contents": "closest_system = $1" },
		{ "trigger": "is_ironman	Check if current game is ironman.", "contents": "is_ironman = $1" },
		{ "trigger": "custom_tooltip_fail	shows custom text when trigger is failing", "contents": "custom_tooltip_fail = {\n\t$1\n }" },
		{ "trigger": "years_passed	compares the number of years that have passed since game start with a value", "contents": "years_passed = $1" },
		{ "trigger": "host_has_dlc	Checks if the host has a certain dlc enabled", "contents": "host_has_dlc = $1" },
		{ "trigger": "local_has_dlc	Checks if the host has a certain dlc enabled", "contents": "local_has_dlc = $1" },
		{ "trigger": "nor	negates content of trigger", "contents": "nor = $1" },
		{ "trigger": "nand	negates content of trigger", "contents": "nand = $1" },
		{ "trigger": "text	shows custom text", "contents": "text = $1" },
		{ "trigger": "custom_tooltip	shows a custom tooltip for the effects within", "contents": "custom_tooltip = {\n\t$1\n }" },
		{ "trigger": "members	compares the number of alliance members", "contents": "members = $1" },
		{ "trigger": "any_ambient_object	any ambient object trigger", "contents": "any_ambient_object = $1" },
		{ "trigger": "any_member	any member in an alliance", "contents": "any_member = $1" }
	]
}