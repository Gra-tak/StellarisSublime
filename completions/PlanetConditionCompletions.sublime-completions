
{
	"scope":"block.effect block.Planet",
	"completions":
	[
		{ "trigger": "has_ring	Checks if a planet has a ring or not (bool)", "contents": "has_ring" },
		{ "trigger": "has_owner	checks if a planet is colonized", "contents": "has_owner" },
		{ "trigger": "is_moon	checks if a planet is a moon", "contents": "is_moon" },
		{ "trigger": "any_pop	switches scope to and goes through each pop unit on the planet or all pops of the scope species", "contents": "any_pop" },
		{ "trigger": "is_owned_by	checks if a planet or galactic object is owned by target empire", "contents": "is_owned_by" },
		{ "trigger": "is_planet_class	checks if a planet is of a certain class", "contents": "is_planet_class" },
		{ "trigger": "has_strategic_resource	checks if a planet has a specific strategic resource", "contents": "has_strategic_resource" },
		{ "trigger": "is_star_class	checks if a planet star is of a certain class", "contents": "is_star_class" },
		{ "trigger": "distance	Compares the min/max distance to a target with a value", "contents": "distance" },
		{ "trigger": "has_planet_modifier	checks if a planet has a planet modifier", "contents": "has_planet_modifier" },
		{ "trigger": "has_planet_flag	checks if a planet has a specified flag", "contents": "has_planet_flag" },
		{ "trigger": "is_capital	checks if a planet is its owners capital", "contents": "is_capital" },
		{ "trigger": "has_ground_combat	checks if a planet has ground combat", "contents": "has_ground_combat" },
		{ "trigger": "num_pops	compares the number of planets on a planet with a value", "contents": "num_pops" },
		{ "trigger": "is_inside_nebula	checks if a planet/ship is inside a nebula", "contents": "is_inside_nebula" },
		{ "trigger": "is_inside_border	checks if a planet/ship/fleet is inside the border of the specified country", "contents": "is_inside_border" },
		{ "trigger": "planet_size	compares the planet size", "contents": "planet_size" },
		{ "trigger": "is_star	checks if a planet is a star", "contents": "is_star" },
		{ "trigger": "is_asteroid	checks if a planet is an asteroid", "contents": "is_asteroid" },
		{ "trigger": "is_colonizable	Checks if a planet is colonizable (bool)", "contents": "is_colonizable" },
		{ "trigger": "num_minerals	compares the number of minerals on a planet with a value", "contents": "num_minerals" },
		{ "trigger": "num_physics	compares the number of physics resources on a planet with a value", "contents": "num_physics" },
		{ "trigger": "num_society	compares the number of society resources on a planet with a value", "contents": "num_society" },
		{ "trigger": "num_engineering	compares the number of engineering resources on a planet with a value", "contents": "num_engineering" },
		{ "trigger": "num_modifiers	Compares the number of modifiers on a planet with a value", "contents": "num_modifiers" },
		{ "trigger": "has_any_strategic_resource	Checks whether a planet has any strategic resource (bool)", "contents": "has_any_strategic_resource" },
		{ "trigger": "free_leader_slots	Compares the number of free leader slots", "contents": "free_leader_slots" },
		{ "trigger": "is_occupied_flag	Checks if a planet is under military occupation", "contents": "is_occupied_flag" },
		{ "trigger": "can_colonize	checks if a planet is colonizable by a country's founder species", "contents": "can_colonize" },
		{ "trigger": "is_surveyed	Checks if a planet/system as been survey by specified country", "contents": "is_surveyed" },
		{ "trigger": "has_global_flag	Checks a global trigger", "contents": "has_global_flag" },
		{ "trigger": "check_variable	Compares the variable value", "contents": "check_variable" },
		{ "trigger": "is_colony	checks if a planet is a colony", "contents": "is_colony" },
		{ "trigger": "habitability	Checks for species habitability on current planet", "contents": "habitability" },
		{ "trigger": "has_building	checks if a planet or tile has a building", "contents": "has_building" },
		{ "trigger": "is_controlled_by	checks if a planet is controlled by a certain country", "contents": "is_controlled_by" },
		{ "trigger": "is_terraformed	checks if a planet has ever been terraformed", "contents": "is_terraformed" },
		{ "trigger": "is_terraforming	checks if a planet is being terraformed right now", "contents": "is_terraforming" },
		{ "trigger": "has_planet_edict	checks if a planet has an edict", "contents": "has_planet_edict" },
		{ "trigger": "has_observation_outpost	checks if a planet has an observation outpost", "contents": "has_observation_outpost" },
		{ "trigger": "has_mining_station	checks if a planet has a mining station", "contents": "has_mining_station" },
		{ "trigger": "has_research_station	checks if a planet has a research station", "contents": "has_research_station" },
		{ "trigger": "has_spaceport	checks if a planet has a spaceport", "contents": "has_spaceport" },
		{ "trigger": "any_spaceport	any spaceport trigger", "contents": "any_spaceport" },
		{ "trigger": "any_research_station	any research station outpost", "contents": "any_research_station" },
		{ "trigger": "any_mining_station	any mining station outpost", "contents": "any_mining_station" },
		{ "trigger": "has_army	checks if a planet has an army", "contents": "has_army" },
		{ "trigger": "count_pops	Counts the amount of pops which fill a requirement and compare it to a number", "contents": "count_pops" },
		{ "trigger": "has_anomaly	checks if a planet has a anomaly", "contents": "has_anomaly" },
		{ "trigger": "is_planet	checks if a planet is of the same as the scope", "contents": "is_planet" },
		{ "trigger": "is_ship	checks if a ship is of the same as the scope", "contents": "is_ship" },
		{ "trigger": "has_grown_pop	Checks if a planet or tile has a grown pop", "contents": "has_grown_pop" },
		{ "trigger": "has_growing_pop	Checks if a planet or tile has a growing pop", "contents": "has_growing_pop" },
		{ "trigger": "has_resource	Compares the resources of planet or tile.", "contents": "has_resource" },
		{ "trigger": "has_building_construction	checks if a planet or tile has a building construction", "contents": "has_building_construction" },
		{ "trigger": "any_tile	switches scope to and goes through each tile", "contents": "any_tile" },
		{ "trigger": "has_blocker	checks if a planet or tile has a blocker", "contents": "has_blocker" },
		{ "trigger": "free_pop_tiles	compares a value with the amount of free tiles for pops", "contents": "free_pop_tiles" },
		{ "trigger": "free_building_tiles	compares a value with the amount of free tiles for buildings", "contents": "free_building_tiles" },
		{ "trigger": "has_edict	checks if a planet or country has an edict activated", "contents": "has_edict" },
		{ "trigger": "has_moon	checks if a planet has a moon", "contents": "has_moon" },
		{ "trigger": "num_moons	Compares number of moons of planet.", "contents": "num_moons" },
		{ "trigger": "is_in_cluster	checks if a galactic object belongs to a cluster", "contents": "is_in_cluster" },
		{ "trigger": "any_moon	any moon trigger", "contents": "any_moon" },
		{ "trigger": "is_preventing_anomaly	checks if a planet is currently preventing anomalies", "contents": "is_preventing_anomaly" },
		{ "trigger": "observation_outpost_owner	Owner of an observation outpost", "contents": "observation_outpost_owner" },
		{ "trigger": "observation_outpost	observation outpost", "contents": "observation_outpost" },
		{ "trigger": "has_deposit	checks if a tile/planet has a deposit", "contents": "has_deposit" },
		{ "trigger": "has_deposit_for	checks if a tile has a deposit for specific ship class", "contents": "has_deposit_for" },
		{ "trigger": "colony_age	colony age in months compared with a value", "contents": "colony_age" },
		{ "trigger": "is_rim_system	checks if a system is on the galactic rim", "contents": "is_rim_system" },
		{ "trigger": "has_modifier	checks if scope object has a modifier", "contents": "has_modifier" },
		{ "trigger": "is_ringworld	checks if a planet is a ringworld", "contents": "is_ringworld" },
		{ "trigger": "is_ideal_planet_class	Checks if a planet is of ideal class for country", "contents": "is_ideal_planet_class" },
		{ "trigger": "sector_controlled	Checks if the planet/fleet is controlled by the sector", "contents": "sector_controlled" },
		{ "trigger": "orbital_bombardment	Checks the orbital bombardment status of a planet", "contents": "orbital_bombardment" },
		{ "trigger": "count_deposits	counts number of deposits of given type on planet or tile", "contents": "count_deposits" },
		{ "trigger": "has_point_of_interest	Checks if the scope location has a point of interest", "contents": "has_point_of_interest" },
		{ "trigger": "has_orbital_station	checks if a planet has an orbital station", "contents": "has_orbital_station" },
		{ "trigger": "any_orbital_station	any orbital station", "contents": "any_orbital_station" },
		{ "trigger": "count_armies	Counts the amount of armies which fill a requirement and compare it to a number", "contents": "count_armies" },
		{ "trigger": "original_owner	checks if a planet is still owned by first colonizer", "contents": "original_owner" },
		{ "trigger": "is_homeworld	checks if a planet is its owners homeworld", "contents": "is_homeworld" },
		{ "trigger": "is_neighbor_of	Checks if country is neighbors with target", "contents": "is_neighbor_of" },
		{ "trigger": "is_under_colonization	Checks if a planet is being colonized (bool)", "contents": "is_under_colonization" },
		{ "trigger": "has_colony_progress	Checks progress of establishing a colony on planet", "contents": "has_colony_progress" },
		{ "trigger": "is_valid	checks to see if the target of a scope is valid", "contents": "is_valid" },
		{ "trigger": "fortification_health	compares a value with fortification health percentage", "contents": "fortification_health" },
		{ "trigger": "has_spaceport_module	Checks if a spaceport has a module upgrade", "contents": "has_spaceport_module" },
		{ "trigger": "has_free_spaceport_module_slot	Checks if a spaceport has a free module slot", "contents": "has_free_spaceport_module_slot" },
		{ "trigger": "is_spaceport_module_slot_free	Checks if a specific spaceport module slot is free", "contents": "is_spaceport_module_slot_free" },
		{ "trigger": "can_build_spaceport_module	Checks if a spaceport is allowed to build a specific module upgrade", "contents": "can_build_spaceport_module" },
		{ "trigger": "num_free_spaceport_module_slots	Compares the parameter to the amount of free spaceport module slots", "contents": "num_free_spaceport_module_slots" },
		{ "trigger": "num_spaceport_modules	Compares the parameter to the amount of spaceport modules", "contents": "num_spaceport_modules" },
		{ "trigger": "num_energy	compares the number of energy on a planet with a value", "contents": "num_energy" },
		{ "trigger": "is_proposing_war_demands	Checks if currently proposing wardemands or handling existing wardemands", "contents": "is_proposing_war_demands" }
	]
}