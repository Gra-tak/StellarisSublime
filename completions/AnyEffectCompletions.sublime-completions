
{
	"scope":"block.effect block.Any",
	"completions":
	[
		{ "trigger": "hidden_effect	Effect not shown in tooltips", "contents": "hidden_effect" },
		{ "trigger": "custom_tooltip	just a tooltip", "contents": "custom_tooltip" },
		{ "trigger": "if	a conditional effect", "contents": "if" },
		{ "trigger": "random	a random effect", "contents": "random" },
		{ "trigger": "random_list	a random effect", "contents": "random_list" },
		{ "trigger": "create_species	Creates a new species", "contents": "create_species" },
		{ "trigger": "create_country	Creates a new country", "contents": "create_country" },
		{ "trigger": "create_fleet	Creates a new fleet", "contents": "create_fleet" },
		{ "trigger": "random_country	Picks a random country", "contents": "random_country" },
		{ "trigger": "remove_global_flag	Removes a flag from a country", "contents": "remove_global_flag" },
		{ "trigger": "set_global_flag	Sets a global flag", "contents": "set_global_flag" },
		{ "trigger": "every_country	fires a Country event", "contents": "every_country" },
		{ "trigger": "every_ship	fires a Ship event", "contents": "every_ship" },
		{ "trigger": "every_planet	Executes on every planet", "contents": "every_planet" },
		{ "trigger": "save_event_target_as	save an event target", "contents": "save_event_target_as" },
		{ "trigger": "save_global_event_target_as	save a global event target", "contents": "save_global_event_target_as" },
		{ "trigger": "clear_global_event_target	clear a global event target", "contents": "clear_global_event_target" },
		{ "trigger": "clear_global_event_targets	clear all global event targets", "contents": "clear_global_event_targets" },
		{ "trigger": "break	break execution of effects", "contents": "break" },
		{ "trigger": "while	repeats contained effects until limit fails or count is reached", "contents": "while" },
		{ "trigger": "destroy_fleet	Destroys fleet on the right side of =", "contents": "destroy_fleet" },
		{ "trigger": "create_ambient_object	Creates a new ambient object of type <type> at location <location>", "contents": "create_ambient_object" },
		{ "trigger": "destroy_ambient_object	Destroys an ambient object", "contents": "destroy_ambient_object" },
		{ "trigger": "set_timed_global_flag	Sets a timed global flag", "contents": "set_timed_global_flag" },
		{ "trigger": "switch	Switches effect based on triggers", "contents": "switch" },
		{ "trigger": "pop_faction_event	fires a Pop faction event", "contents": "pop_faction_event" },
		{ "trigger": "closest_system	switches scope to closest system that passes limit", "contents": "closest_system" }
	]
}