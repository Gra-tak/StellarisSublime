
{
	"scope":"block.effect block.Planet",
	"completions":
	[
		{ "trigger": "tooltip	just a tooltip", "contents": "tooltip" },
		{ "trigger": "planet_event	fires a Planet event", "contents": "planet_event" },
		{ "trigger": "add_minerals	Adds Minerals to a planet, tile or country", "contents": "add_minerals" },
		{ "trigger": "add_physics	Adds Physics resources to a planet", "contents": "add_physics" },
		{ "trigger": "add_society	Adds Society resources to a planet", "contents": "add_society" },
		{ "trigger": "add_engineering	Adds Engineering resources to a planet", "contents": "add_engineering" },
		{ "trigger": "set_owner	Sets the owner of a planet or fleet.", "contents": "set_owner" },
		{ "trigger": "add_resource	Adds a resource to a planet or tile", "contents": "add_resource" },
		{ "trigger": "set_planet_flag	Sets a flag on a planet", "contents": "set_planet_flag" },
		{ "trigger": "remove_planet_flag	Removes a flag from a planet", "contents": "remove_planet_flag" },
		{ "trigger": "create_army	Creates a new army", "contents": "create_army" },
		{ "trigger": "create_pop	Creates a new pop", "contents": "create_pop" },
		{ "trigger": "create_colony	Creates a colony", "contents": "create_colony" },
		{ "trigger": "set_capital	Sets planet to capital of a country", "contents": "set_capital" },
		{ "trigger": "change_pc	Change planet class of planet.", "contents": "change_pc" },
		{ "trigger": "random_pop	Picks a random pop", "contents": "random_pop" },
		{ "trigger": "destroy_colony	Destroys the colony on the planet", "contents": "destroy_colony" },
		{ "trigger": "surveyed	Sets a planet as surveyed by a specific country", "contents": "surveyed" },
		{ "trigger": "set_ring	Adds or removes the ring around a planet", "contents": "set_ring" },
		{ "trigger": "create_mining_station	Creates a mining station", "contents": "create_mining_station" },
		{ "trigger": "create_research_station	Creates a research station", "contents": "create_research_station" },
		{ "trigger": "every_owned_pop	switches scope to pop and goes through all pops on planet or in country", "contents": "every_owned_pop" },
		{ "trigger": "set_name	changes the name of a scope target", "contents": "set_name" },
		{ "trigger": "add_modifier	Gives a specific modifier to a planet.", "contents": "add_modifier" },
		{ "trigger": "set_variable	Sets a variable value", "contents": "set_variable" },
		{ "trigger": "change_variable	Changes a variable value", "contents": "change_variable" },
		{ "trigger": "every_pop	fires a Pop event", "contents": "every_pop" },
		{ "trigger": "create_rebels	Creates a new rebel country", "contents": "create_rebels" },
		{ "trigger": "cancel_terraformation	Cancels terraformation on the planet", "contents": "cancel_terraformation" },
		{ "trigger": "spawn_system	spawns system with position relative to scope, parameters are system, min_distance(0), max_distance(100)", "contents": "spawn_system" },
		{ "trigger": "random_research_station	Picks a random research station", "contents": "random_research_station" },
		{ "trigger": "random_mining_station	Picks a random mining station", "contents": "random_mining_station" },
		{ "trigger": "random_spaceport	Picks a random spaceport", "contents": "random_spaceport" },
		{ "trigger": "random_army	Picks a random army", "contents": "random_army" },
		{ "trigger": "modify_species	Creates a new modified species", "contents": "modify_species" },
		{ "trigger": "add_anomaly	adds a specified anomaly to planet", "contents": "add_anomaly" },
		{ "trigger": "change_planet_size	Adds/Removes onto the size of the planet.", "contents": "change_planet_size" },
		{ "trigger": "every_tile	Executes on every tile on planet", "contents": "every_tile" },
		{ "trigger": "random_tile	Executes on a random tile on planet", "contents": "random_tile" },
		{ "trigger": "create_point_of_interest	Creates point of interest", "contents": "create_point_of_interest" },
		{ "trigger": "random_moon	Executes on all moons", "contents": "random_moon" },
		{ "trigger": "every_moon	Executes on all moons", "contents": "every_moon" },
		{ "trigger": "kill_leader	Kills leaders of specified types. kill_leader = { type = general type = scientist etc. }", "contents": "kill_leader" },
		{ "trigger": "set_timed_planet_flag	Sets a timed flag on a planet", "contents": "set_timed_planet_flag" },
		{ "trigger": "prevent_anomaly	Sets if this planet will generate new anomalies.", "contents": "prevent_anomaly" },
		{ "trigger": "every_planet_army	Picks every army", "contents": "every_planet_army" },
		{ "trigger": "observation_outpost_owner	Picks the observation station owner", "contents": "observation_outpost_owner" },
		{ "trigger": "observation_outpost	Picks the observation station", "contents": "observation_outpost" },
		{ "trigger": "purge	Starts/stops purging pops", "contents": "purge" },
		{ "trigger": "set_planet_max_health	Sets the maximum health of a planet", "contents": "set_planet_max_health" },
		{ "trigger": "set_planet_health	Sets the current health of a planet", "contents": "set_planet_health" },
		{ "trigger": "remove_modifier	Removes a specific modifier from a planet.", "contents": "remove_modifier" },
		{ "trigger": "set_spaceport_module	Sets a spaceport module at specified slot", "contents": "set_spaceport_module" },
		{ "trigger": "create_spaceport	creates a spaceport around planet", "contents": "create_spaceport" },
		{ "trigger": "set_spaceport_level	Sets the level of the spaceport", "contents": "set_spaceport_level" },
		{ "trigger": "set_controller	Sets the controller of a planet", "contents": "set_controller" },
		{ "trigger": "random_owned_pop	Picks a random pop", "contents": "random_owned_pop" },
		{ "trigger": "unassign_leader	Unassigns a leader from scope", "contents": "unassign_leader" },
		{ "trigger": "add_colony_progress	Add progress to a colony", "contents": "add_colony_progress" },
		{ "trigger": "start_colony	Starts a colony", "contents": "start_colony" },
		{ "trigger": "add_threat	Adds threat", "contents": "add_threat" },
		{ "trigger": "remove_spaceport_module	Removes a spaceport module from a spaceport. Argument is either a spaceport module slot number or a spaceport module tag", "contents": "remove_spaceport_module" }
	]
}