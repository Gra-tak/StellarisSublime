%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
#The base level syntax file
#TODO: Rename to Stellaris.sublime-syntax
# These are of particular interest
#(events, fleet_event)
#(events, planet_event)
#(events, country_event)
#(events, pop_faction_event)
#(events, ship_event)
#(events, event)
#(events, pop_event)
#(anomalies, anomaly)
#(anomalies, anomaly_category)
#then one for general ones

file_extensions: 
  - syntaxtest
  - stellaris
  - txt
scope: source.stellaris

variables:
  equals_open_brace: '\s+(=)\s+({)'
  value_with_dots: '(-?(?:\w|\.)+)'
  any_value : '("?(?:\w|\.|:)+"?)'
  equals_value_with_dots: '\s*(=)\s*{{value_with_dots}}'
  user_keyword: ((?:\w|:)+)
prototype:
  - include: comment

contexts:
  main:
    - match: '(?i)(event){{equals_open_brace}}' #Globally scoped, can only use stuff that goes to every/any item in the galaxy
      scope: keyword.defined.block.altering
      push: event

    - match: '(?i)(country_event){{equals_open_brace}}'
      scope: keyword.defined.block.altering
      push: country_event

    - match: '(?i)(planet_event){{equals_open_brace}}'
      scope: keyword.defined.block.altering
      push: planet_event

    - match: '(?i)(pop_event){{equals_open_brace}}'
      scope: keyword.defined.block.altering
      push: pop_event

    - match: '(?i)(pop_faction_event){{equals_open_brace}}'
      scope: keyword.defined.block.altering
      push: pop_faction_event

    - match: '(?i)(fleet_event){{equals_open_brace}}'
      scope: keyword.defined.block.altering
      push: fleet_event

    - match: '(?i)(ship_event){{equals_open_brace}}'
      scope: keyword.defined.block.altering
      push: ship_event
   # - match: 'anomaly{{equals_open_brace}}'
    - match: '(?i)(anomaly_category){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.altering
        2: sign.equals
        3: brace.open
      push: anomaly_category

    - match: '(\w+){{equals_open_brace}}'
      captures:
        1: unknown.base.statement
        2: sign.equals
        3: brace.open
      push: user_define_scope

    - match: '(@\w+)\s*(=)\s*{{value_with_dots}}'
      captures:
        1: value.user.defined.constant
        2: sign.equals
        3: value.user.defined 
    - match: '(namespace)\s*(=)\s*(\w+)'
      captures:
        1: keyword.defined.value
        2: sign.equals
        3: value.user.defined
    - include: comment
#   ▄█▀█▄░░█▀▀▀▀░░█▄░░█░░█▀▀▀▀░░██▀█▄░░▄█▀█▄░░█░░░░░░░░░░░█▀▀▀▀░░█░░░█░░█▀▀▀▀░░█▄░░█░░▀▀█▀▀░░░░░
#   █░░░▀░░█░░░░░░█▀▄░█░░█░░░░░░█▄░▄█░░█░░░█░░█░░░░░░░░░░░█░░░░░░█░░░█░░█░░░░░░█▀▄░█░░░░█░░░░░░░
#   █░▀▀█░░█▀▀▀░░░█░▀▄█░░█▀▀▀░░░███▀░░░█▀▀▀█░░█░░░░░░░░░░░█▀▀▀░░░█░░░█░░█▀▀▀░░░█░▀▄█░░░░█░░░░░░░
#   ▀█▄█▀░░█▄▄▄▄░░█░░▀█░░█▄▄▄▄░░█░▀█▄░░█░░░█░░█▄▄▄▄░░░░░░░█▄▄▄▄░░░▀▄▀░░░█▄▄▄▄░░█░░▀█░░░░█░░░░░░░
#   

  general_event:
    - meta_scope: event
    - include: comment
    #Basic stuff that is generally always present
    - match: '(?i)\b(id|picture|show_sound|is_triggered_only|location|hide_window|title|desc){{equals_value_with_dots}}\b'
      captures:
        1: keyword.defined.value
        2: sign.equals
        3: value.user.defined
    - match: '(?i)\b(mean_time_to_happen)\b{{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push:
        - match: '(?i)(days)\s*(=)\s*(\d+)'
          captures:
            1: keyword.defined.value
            2: sign.equals
            3: value.user.defined
        - include: eat_end_brace

    - match: '(?i)\b(title|desc|picture)\b'
      scope: keyword.defined.value.localised

    - match: '"'
      push: localised

    - include: unknown
    - include: eat_end_brace
    #Match a keyword we haven't seen to some value

  localised:
    - meta_scope: 'value.localised'
    - match: '"'
      pop: true

  eat_end_brace:
    - match: "}"
      scope: brace.end
      pop: true
  
  event: 
    - meta_scope: event
    - match: '(?i)(trigger){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/global_condition.sublime-syntax'
    
    # Matches immediate block
    - match: '(?i)(immediate){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/global_effect.sublime-syntax'

    - include: general_event

#      
#  ▄█▀█▄░░█▀▀▀█░░█░░░█░░█▄░░█░░▀▀█▀▀░░██▀█▄░░█░░░█░░░░░░░█▀▀▀▀░░█░░░█░░█▀▀▀▀░░█▄░░█░░▀▀█▀▀░░░░░
#  █░░░▀░░█░░░█░░█░░░█░░█▀▄░█░░░░█░░░░█▄░▄█░░▀█▄█▀░░░░░░░█░░░░░░█░░░█░░█░░░░░░█▀▄░█░░░░█░░░░░░░
#  █░░░▄░░█░░░█░░█░░░█░░█░▀▄█░░░░█░░░░███▀░░░░░█░░░░░░░░░█▀▀▀░░░█░░░█░░█▀▀▀░░░█░▀▄█░░░░█░░░░░░░
#  ▀█▄█▀░░█▄▄▄█░░█▄▄▄█░░█░░▀█░░░░█░░░░█░▀█▄░░░░█░░░░░░░░░█▄▄▄▄░░░▀▄▀░░░█▄▄▄▄░░█░░▀█░░░░█░░░░░░░

  country_event:
    - meta_scope: event
    # Matches trigger match
    - match: '(?i)(trigger){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/country_condition.sublime-syntax'
    - match: '(?i)(desc){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: country_event

    # Matches immediate block
    - match: '(?i)(immediate){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/country_effect.sublime-syntax'
    
    ## Matches Option block
    - match: '(?i)(option){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push:
        - meta_scope: effect country
        - include: option_name
        - match: '(?i)(trigger){{equals_open_brace}}'
          captures:
            1: keyword.defined.block.constant
            2: sign.equals
            3: brace.open
          push: 'Packages/Stellaris/hidden/country_condition.sublime-syntax'
        - include: 'Packages/Stellaris/hidden/country_effect.sublime-syntax'
    - include: general_event  #


#   █▀▀▀▀▀▀▀▀█░░█░░░░░░░░░░░█▀▀▀▀▀▀▀▀█░░██▄░░░░░░█░░█▀▀▀▀▀▀▀▀░░▀▀▀▀█▀▀▀▀░░░░░█▀▀▀▀▀▀▀▀░░▀█▄░░░░░░░░▄█░░█▀▀▀▀▀▀▀▀░░██▄░░░░░░█░░▀▀▀▀█▀▀▀▀
#   █░░░░░░░░█░░█░░░░░░░░░░░█░░░░░░░░█░░█░▀█▄░░░░█░░█░░░░░░░░░░░░░░█░░░░░░░░░█░░░░░░░░░░░░▀▄░░░░░░▄▀░░░█░░░░░░░░░░█░▀█▄░░░░█░░░░░░█░░░░
#   █▄▄▄▄▄▄▄▄█░░█░░░░░░░░░░░█▄▄▄▄▄▄▄▄█░░█░░░▀▄░░░█░░█▀▀▀▀▀▀░░░░░░░░█░░░░░░░░░█▀▀▀▀▀▀░░░░░░░▀▄░░░░▄▀░░░░█▀▀▀▀▀▀░░░░█░░░▀▄░░░█░░░░░░█░░░░
#   █░░░░░░░░░░░█░░░░░░░░░░░█░░░░░░░░█░░█░░░░▀█▄░█░░█░░░░░░░░░░░░░░█░░░░░░░░░█░░░░░░░░░░░░░░▀█░░█▀░░░░░█░░░░░░░░░░█░░░░▀█▄░█░░░░░░█░░░░
#   █░░░░░░░░░░░█▄▄▄▄▄▄▄▄▄░░█░░░░░░░░█░░█░░░░░░▀██░░█▄▄▄▄▄▄▄▄░░░░░░█░░░░░░░░░█▄▄▄▄▄▄▄▄░░░░░░░▀██▀░░░░░░█▄▄▄▄▄▄▄▄░░█░░░░░░▀██░░░░░░█░░░░
  planet_event:
    - meta_scope: event
    # Matches trigger match
    - match: '(?i)(trigger){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/planet_condition.sublime-syntax'

    - match: '(?i)(desc){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: planet_event

    # Matches immediate block
    - match: '(?i)(immediate){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/planet_effect.sublime-syntax'

    ## Matches Option block
    - match: '(?i)(option){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push:
        - meta_scope: effect planet
        - include: option_name
        - match: '(?i)(trigger){{equals_open_brace}}'
          captures:
            1: keyword.defined.block.constant
            2: sign.equals
            3: brace.open
          push: 'Packages/Stellaris/hidden/planet_condition.sublime-syntax'
        - include: 'Packages/Stellaris/hidden/planet_effect.sublime-syntax'

    - include: general_event

#    █▀▀▀▀░░█░░░█░░█▀▀▀▀░░█▄░░█░░▀▀█▀▀░░░░░
#    █░░░░░░█░░░█░░█░░░░░░█▀▄░█░░░░█░░░░░░░
#    █▀▀▀░░░█░░░█░░█▀▀▀░░░█░▀▄█░░░░█░░░░░░░
#    █▄▄▄▄░░░▀▄▀░░░█▄▄▄▄░░█░░▀█░░░░█░░░░░░░

  pop_event:
    - meta_scope: event
    # Matches trigger match
    - match: '(?i)(trigger){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/pop_condition.sublime-syntax'

    - match: '(?i)(desc){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: pop_event
      
    # Matches immediate block
    - match: '(?i)(immediate){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/pop_effect.sublime-syntax'
    ## Matches Option block
    - match: '(?i)(option){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push:
        - meta_scope: effect pop
        - include: option_name
        - match: '(?i)(trigger){{equals_open_brace}}'
          captures:
            1: keyword.defined.block.constant
            2: sign.equals
            3: brace.open
          push: 'Packages/Stellaris/hidden/pop_condition.sublime-syntax'
        - include: 'Packages/Stellaris/hidden/pop_effect.sublime-syntax'

    - include: general_event

#    █▀▀█▄░░█▀▀▀█░░█▀▀█▄░░░░░░░█▀▀▀▀░░▄█▀█▄░░▄█▀█▄░░▀▀█▀▀░░▀▀█▀▀░░█▀▀▀█░░█▄░░█░░░░░░░█▀▀▀▀░░█░░░█░░█▀▀▀▀░░█▄░░█░░▀▀█▀▀
#    █░░▄█░░█░░░█░░█░░▄█░░░░░░░█░░░░░░█░░░█░░█░░░▀░░░░█░░░░░░█░░░░█░░░█░░█▀▄░█░░░░░░░█░░░░░░█░░░█░░█░░░░░░█▀▄░█░░░░█░░
#    █▀▀▀░░░█░░░█░░█▀▀▀░░░░░░░░█▀▀▀░░░█▀▀▀█░░█░░░▄░░░░█░░░░░░█░░░░█░░░█░░█░▀▄█░░░░░░░█▀▀▀░░░█░░░█░░█▀▀▀░░░█░▀▄█░░░░█░░
#    █░░░░░░█▄▄▄█░░█░░░░░░░░░░░█░░░░░░█░░░█░░▀█▄█▀░░░░█░░░░▄▄█▄▄░░█▄▄▄█░░█░░▀█░░░░░░░█▄▄▄▄░░░▀▄▀░░░█▄▄▄▄░░█░░▀█░░░░█░░

  pop_faction_event:
    - meta_scope: event
    # Matches trigger match
    - match: '(?i)(trigger){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/pop_faction_condition.sublime-syntax'

    - match: '(?i)(desc){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: pop_faction_event
      
    # Matches immediate block
    - match: '(?i)(immediate){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/pop_faction_effect.sublime-syntax'
    ## Matches Option block
    - match: '(?i)(option){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push:
        - meta_scope: effect pop_faction
        - include: option_name
        - match: '(?i)(trigger){{equals_open_brace}}'
          captures:
            1: keyword.defined.block.constant
            2: sign.equals
            3: brace.open
          push: 'Packages/Stellaris/hidden/pop_faction_condition.sublime-syntax'
        - include: 'Packages/Stellaris/hidden/pop_faction_effect.sublime-syntax'
    
    - include: general_event



#   █▀▀▀▀░░█░░░░░░█▀▀▀▀░░█▀▀▀▀░░▀▀█▀▀░░░░░░░█▀▀▀▀░░█░░░█░░█▀▀▀▀░░█▄░░█░░▀▀█▀▀
#   █░░░░░░█░░░░░░█░░░░░░█░░░░░░░░█░░░░░░░░░█░░░░░░█░░░█░░█░░░░░░█▀▄░█░░░░█░░
#   █▀▀▀░░░█░░░░░░█▀▀▀░░░█▀▀▀░░░░░█░░░░░░░░░█▀▀▀░░░█░░░█░░█▀▀▀░░░█░▀▄█░░░░█░░
#   █░░░░░░█▄▄▄▄░░█▄▄▄▄░░█▄▄▄▄░░░░█░░░░░░░░░█▄▄▄▄░░░▀▄▀░░░█▄▄▄▄░░█░░▀█░░░░█░░

  fleet_event:
    - meta_scope: event
    # Matches trigger match
    - match: '(?i)(trigger){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/fleet_condition.sublime-syntax'

    - match: '(?i)(desc){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: fleet_event
      
    # Matches immediate block
    - match: '(?i)(immediate){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/fleet_effect.sublime-syntax'
    ## Matches Option block
    - match: '(?i)(option){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push:
        - meta_scope: effect fleet
        - include: option_name
        - match: '(?i)(trigger){{equals_open_brace}}'
          captures:
            1: keyword.defined.block.constant
            2: sign.equals
            3: brace.open
          push: 'Packages/Stellaris/hidden/fleet_condition.sublime-syntax'
        - include: 'Packages/Stellaris/hidden/fleet_effect.sublime-syntax'
    - include: general_event
 
#  
#   ▄▀▀▀▀▀▀▀▀▀▀▄░░█░░░░░░░░░░░█░░█░░█▀▀▀▀▀▀▀▀▀▀▀▄░░░░░█▀▀▀▀▀▀▀▀▀▀░░██░░░░░░░░░░░░█▀░░█▀▀▀▀▀▀▀▀▀▀░░███░░░░░░░░░█░░▀▀▀▀▀▀█▀▀▀▀▀▀
#   █░░░░░░░░░░▀░░█░░░░░░░░░░░█░░█░░█░░░░░░░░░░░█░░░░░█░░░░░░░░░░░░░▀█░░░░░░░░░░█▀░░░█░░░░░░░░░░░░█░▀█▄░░░░░░░█░░░░░░░░█░░░░░░
#   █░░░░░░░░░░░░░█░░░░░░░░░░░█░░█░░█░░░░░░░░░░░█░░░░░█░░░░░░░░░░░░░░▀█░░░░░░░▄█▀░░░░█░░░░░░░░░░░░█░░▀██▄░░░░░█░░░░░░░░█░░░░░░
#   ░▀▀▀▀▀▀▀▀▀▀▄░░█▀▀▀▀▀▀▀▀▀▀▀█░░█░░█▄▄▄▄▄▄▄▄▄▄▄▀░░░░░█▀▀▀▀▀▀▀▀░░░░░░░▀█▄░░░░▄█▀░░░░░█▀▀▀▀▀▀▀▀░░░░█░░░░▀██▄░░░█░░░░░░░░█░░░░░░
#   ░░░░░░░░░░░█░░█░░░░░░░░░░░█░░█░░█░░░░░░░░░░░░░░░░░█░░░░░░░░░░░░░░░░░█▄░░▄█░░░░░░░█░░░░░░░░░░░░█░░░░░░▀██░░█░░░░░░░░█░░░░░░
#   █░░░░░░░░░░█░░█░░░░░░░░░░░█░░█░░█░░░░░░░░░░░░░░░░░█░░░░░░░░░░░░░░░░░░█▄▄█░░░░░░░░█░░░░░░░░░░░░█░░░░░░░░▀█▄█░░░░░░░░█░░░░░░
#   ░▀▀▀▀▀▀▀▀▀▀░░░▀░░░░░░░░░░░▀░░▀░░▀░░░░░░░░░░░░░░░░░▀▀▀▀▀▀▀▀▀▀▀░░░░░░░░░▀▀░░░░░░░░░▀▀▀▀▀▀▀▀▀▀▀░░▀░░░░░░░░░▀▀▀░░░░░░░░▀░░░░░░
#
#


  ship_event:
    - meta_scope: event
    # Matches trigger match
    - match: '(?i)(trigger){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/ship_condition.sublime-syntax'

    - match: '(?i)(desc){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: ship_event
      
    # Matches immediate block
    - match: '(?i)(immediate){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/ship_effect.sublime-syntax'
    ## Matches Option block
    - match: '(?i)(option){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push:
        - meta_scope: effect ship
        - include: option_name
        - match: '(?i)(trigger){{equals_open_brace}}'
          captures:
            1: keyword.defined.block.constant
            2: sign.equals
            3: brace.open
          push: 'Packages/Stellaris/hidden/ship_condition.sublime-syntax'

        - include: 'Packages/Stellaris/hidden/ship_effect.sublime-syntax'
    - include: general_event 



#   █▀▀▀▀▀▀▀▀█░░█▀▀▀▀▀▀▀▀█░░▀▀▀▀█▀▀▀▀░░█░░█▀▀▀▀▀▀▀▀█░░██▄░░░░░░█░░░░░██▄░░░░░░█░░█▀▀▀▀▀▀▀▀█░░██▄░░░░░▄██░░█▀▀▀▀▀▀▀▀
#   █░░░░░░░░█░░█░░░░░░░░█░░░░░░█░░░░░░█░░█░░░░░░░░█░░█░▀█▄░░░░█░░░░░█░▀█▄░░░░█░░█░░░░░░░░█░░█░▀▄░░░▄▀░█░░█░░░░░░░░
#   █░░░░░░░░█░░█▄▄▄▄▄▄▄▄█░░░░░░█░░░░░░█░░█░░░░░░░░█░░█░░░▀▄░░░█░░░░░█░░░▀▄░░░█░░█▄▄▄▄▄▄▄▄█░░█░░░█▄█░░░█░░█▀▀▀▀▀▀░░
#   █░░░░░░░░█░░█░░░░░░░░░░░░░░░█░░░░░░█░░█░░░░░░░░█░░█░░░░▀█▄░█░░░░░█░░░░▀█▄░█░░█░░░░░░░░█░░█░░░░▀░░░░█░░█░░░░░░░░
#   █▄▄▄▄▄▄▄▄█░░█░░░░░░░░░░░░░░░█░░░░░░█░░█▄▄▄▄▄▄▄▄█░░█░░░░░░▀██░░░░░█░░░░░░▀██░░█░░░░░░░░█░░█░░░░░░░░░█░░█▄▄▄▄▄▄▄▄

  option_name:
    - match: '(?i)(name){{equals_value_with_dots}}'
      captures:
        1: keyword.defined.value
        2: sign.equals
        3: value.user.defined

    - match: '(?i)(name)\s*(=)\s*"'
      captures:
        1: keyword.defined.value
        2: sign.equals
        3: value.localised
      push: localised
  


# ['anomaly']
# █▀▀▀▀▀▀▀▀█░░██▄░░░░░░█░░█▀▀▀▀▀▀▀▀█░░██▄░░░░░▄██░░█▀▀▀▀▀▀▀▀█░░█░░░░░░░░░░░▀█▄░░░░░▄█▀
# █░░░░░░░░█░░█░▀█▄░░░░█░░█░░░░░░░░█░░█░▀▄░░░▄▀░█░░█░░░░░░░░█░░█░░░░░░░░░░░░░▀█░░░█▀░░
# █▄▄▄▄▄▄▄▄█░░█░░░▀▄░░░█░░█░░░░░░░░█░░█░░░█▄█░░░█░░█▄▄▄▄▄▄▄▄█░░█░░░░░░░░░░░░░░░█▄█░░░░
# █░░░░░░░░█░░█░░░░▀█▄░█░░█░░░░░░░░█░░█░░░░▀░░░░█░░█░░░░░░░░█░░█░░░░░░░░░░░░░░░░█░░░░░
# █░░░░░░░░█░░█░░░░░░▀██░░█▄▄▄▄▄▄▄▄█░░█░░░░░░░░░█░░█░░░░░░░░█░░█▄▄▄▄▄▄▄▄▄░░░░░░░█░░░░░

  anomaly_category:
    - meta_scope: anomaly
    - match: '(?i)(spawn_chance|default|potential){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/planet_condition.sublime-syntax'

    - match: '(?i)(on_spawn){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/planet_effect.sublime-syntax'

    - match: '(?i)(on_success|on_fail|on_critical_fail){{equals_open_brace}}'
      captures:
        1: keyword.defined.block.constant
        2: sign.equals
        3: brace.open    
      push: 'Packages/Stellaris/hidden/ship_effect.sublime-syntax'

    - match: '(?i)(level|risk|key|desc|picture){{equals_value_with_dots}}'
      captures:
        1: keyword.defined.value
        2: sign.equals
        3: value.user.defined

    - match: '(?i)(level|risk|key|desc|picture)"'
      captures:
        1: keyword.defined.value
        2: sign.equals
        3: value.localised
      push: localised
    - include: unknown
    - include: eat_end_brace

  comment:
    - match: '#'
      push:
        - meta_scope: comment
        - match: '\n'
          pop: true

  unknown:
      #Unknown scope matches
  - match: '{{user_keyword}}\s*(=)\s*(-?(?:\w|\.|:)+)'
    captures:
      1: keyword.user.defined.value
      2: sign.equals
      3: value.user.defined

  - match: '{{user_keyword}}\s*(=)\s*"'
    captures:
      1: keyword.user.defined.value
      2: sign.equals
      3: value.localised
    push: localised

  #Unknown scope matches
  - match: '{{user_keyword}}\s*(=)\s*(@(?:\w|\.|:)+)'
    captures:
      1: keyword.user.defined.value
      2: sign.equals
      3: value.user.defined.constant

  - match: '{{user_keyword}}{{equals_open_brace}}'
    captures:
      1: keyword.user.defined.block
      2: sign.equals
      3: brace.open
    push: general_event

  - match: '\w+'
    scope: 'value.user.defined'


  user_define_scope:
    - meta_content_scope: user_define comment
    - match: '(?i)#\s*effect\s+global'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/global_effect.sublime-syntax'
    - match: '(?i)#\s*effect\s+country'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/country_effect.sublime-syntax'
    - match: '(?i)#\s*effect\s+sector'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/sector_effect.sublime-syntax'
    - match: '(?i)#\s*effect\s+system'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/system_effect.sublime-syntax'
    - match: '(?i)#\s*effect\s+planet'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/planet_effect.sublime-syntax'
    - match: '(?i)#\s*effect\s+ambient_object'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/ambient_object_effect.sublime-syntax'
    - match: '(?i)#\s*effect\s+fleet'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/fleet_effect.sublime-syntax'
    - match: '(?i)#\s*effect\s+ship'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/ship_effect.sublime-syntax'
    - match: '(?i)#\s*effect\s+pop'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/pop_effect.sublime-syntax'
    - match: '(?i)#\s*effect\s+pop_faction'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/pop_faction_effect.sublime-syntax'
    - match: '(?i)#\s*effect\s+leader'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/leader_effect.sublime-syntax'
    - match: '(?i)#\s*effect\s+war'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/war_effect.sublime-syntax'
    - match: '(?i)#\s*effect\s+army'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/army_effect.sublime-syntax'
    - match: '(?i)#\s*effect\s+tile'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/tile_effect.sublime-syntax'

    - match: '(?i)#\s*global'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/global_condition.sublime-syntax'
    - match: '(?i)#\s*condition\s*country'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/country_condition.sublime-syntax'
    - match: '(?i)#\s*condition\s+sector'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/sector_condition.sublime-syntax'
    - match: '(?i)#\s*condition\s+system'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/system_condition.sublime-syntax'
    - match: '(?i)#\s*condition\s+planet'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/planet_condition.sublime-syntax'
    - match: '(?i)#\s*condition\s+ambient_object'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/ambient_object_condition.sublime-syntax'
    - match: '(?i)#\s*condition\s+fleet'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/fleet_condition.sublime-syntax'
    - match: '(?i)#\s*condition\s+ship'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/ship_condition.sublime-syntax'
    - match: '(?i)#\s*condition\s+pop'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/pop_condition.sublime-syntax'
    - match: '(?i)#\s*condition\s+pop_faction'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/pop_faction_condition.sublime-syntax'
    - match: '(?i)#\s*condition\s+leader'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/leader_condition.sublime-syntax'
    - match: '(?i)#\s*condition\s+war'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/war_condition.sublime-syntax'
    - match: '(?i)#\s*condition\s+army'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/army_condition.sublime-syntax'
    - match: '(?i)#\s*condition\s+tile'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/tile_condition.sublime-syntax'
    - match: '\n'
      set: general_event
    - match: '(?=\w|")'
      set: general_event
  #anomaly:
  #anomaly_category:
