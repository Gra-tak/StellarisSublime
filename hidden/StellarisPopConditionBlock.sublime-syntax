%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html

hidden: true
file_extensions: 
  - syntaxtest
scope: block.condition block.Pop

variables:
  equals_open_brace: '\s+(=)\s+({)'
  open_brace_behind: '(?<={)'

contexts:
  main:
    
    - include: to_Planet
    - include: to_Country
    - include: to_Pop_faction
    - include: eat_end_brace

    
    
    - match: '\b(?i)(happiness|has_trait|has_ethic|is_same_species|distance|is_same_species_class|free_leader_slots|has_pop_flag|has_global_flag|pop_has_ethic|pop_has_trait|is_enslaved|is_being_purged|is_pop|is_species_class|is_sentient|is_preventing_anomaly|is_rim_system|has_modifier|num_ethics|num_traits|member_of_faction|has_pop_faction_flag|opposing_ethics_divergence|is_species|is_growing|is_colony_pop|is_subspecies|is_robot_pop|species_portrait|is_proposing_war_demands|if|and|or|not|hidden_trigger|always|any_country|any_planet|any_ship|any_system|is_multiplayer|exists|any_rim_system|switch|any_ship_in_system|is_same_value|is_scope_valid|closest_system|is_ironman|custom_tooltip_fail|years_passed|host_has_dlc|local_has_dlc|nor|nand)\b'
      scope: keyword.condition.Pop
      push:
       - match: '='
         scope: sign.equals
         set: value

    - match: '(?i)(fromfromfrom|fromfrom|from|prevprevprev|prevprev|prev|root){{equals_open_brace}}'
      captures:
        1: effect.block.keyword.general
        2: sign.equals
        3: brace.open
      push: contextual_scopes

    - match: '"'
      push: string

  
  to_Planet:
    - match: '(?i)(planet){{equals_open_brace}}'
      captures:
        1: condition.block.keyword
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/StellarisPlanetConditionBlock.sublime-syntax'
    
  to_Country:
    - match: '(?i)(owner){{equals_open_brace}}'
      captures:
        1: condition.block.keyword
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/StellarisCountryConditionBlock.sublime-syntax'
    
  to_Pop_faction:
    - match: '(?i)(pop_faction){{equals_open_brace}}'
      captures:
        1: condition.block.keyword
        2: sign.equals
        3: brace.open
      push: 'Packages/Stellaris/hidden/StellarisPop_factionConditionBlock.sublime-syntax'
    
  string:
    - meta_scope: keywords.localised
    - match: '"'
      pop: true

  equalsign:
    - match: '='
      scope: sign.equals
      pop: true

  value:
    - meta_scope: 'meta.value'
    - match: '"'
      set: string

    - match: '\w+'
      scope: "value"
      pop: true

  end_brace_behind: 
    - match: '(?<=})'
      scope: brace.end
      pop: true

  eat_end_brace:
    - match: "}"
      scope: brace.end
      pop: true
  peek_end_brace:
    - match: '(?=})'
      pop: true

  contextual_scopes:
    - meta_scope: effect.block.contextual
    
    - include: Packages/Stellaris/hidden/StellarisAmbient_objectConditionBlock.sublime-syntax
    - include: Packages/Stellaris/hidden/StellarisArmyConditionBlock.sublime-syntax
    - include: Packages/Stellaris/hidden/StellarisCountryConditionBlock.sublime-syntax
    - include: Packages/Stellaris/hidden/StellarisFleetConditionBlock.sublime-syntax
    - include: Packages/Stellaris/hidden/StellarisLeaderConditionBlock.sublime-syntax
    - include: Packages/Stellaris/hidden/StellarisPlanetConditionBlock.sublime-syntax
    
    - include: Packages/Stellaris/hidden/StellarisPop_factionConditionBlock.sublime-syntax
    - include: Packages/Stellaris/hidden/StellarisSectorConditionBlock.sublime-syntax
    - include: Packages/Stellaris/hidden/StellarisShipConditionBlock.sublime-syntax
    - include: Packages/Stellaris/hidden/StellarisSystemConditionBlock.sublime-syntax
    - include: Packages/Stellaris/hidden/StellarisTileConditionBlock.sublime-syntax
    - include: Packages/Stellaris/hidden/StellarisWarConditionBlock.sublime-syntax
    - include: eat_end_brace