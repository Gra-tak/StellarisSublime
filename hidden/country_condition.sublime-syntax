%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
#The base level syntax file
#TODO: Rename to Stellaris.sublime-syntax
# These are of particular interest
#(events, fleet_event)
#(events, planet_event)
#(events, country_event)
#(events, pop_faction_event)
#(events, ship_event)
#(events, event)
#(events, pop_event)
#(anomalies, anomaly)
#(anomalies, anomaly_category)
#then one for general ones

file_extensions: 
  - syntaxtest
  - stellaris
  - txt
hidden: true
scope: condition country

variables:
  equals_open_brace: '\s*(=)\s*({)'
  value_with_dots: '(-?(?:\w|:|\.)+)'
  user_keyword: ((?:\w|:)+)

contexts:
  main:
  - match: '(?i)\b(any_sector)\b{{equals_open_brace}}'
    captures:
      1: keyword.defined.block.altering
      2: sign.equals
      3: brace.open
    push:
      - meta_scope: condition sector
      - match: \b(limit)\b{{equals_open_brace}}
        captures:
          1: keyword.defined.block
          2: sign.equals
          3: brace.open
        push: 'Packages/Stellaris/hidden/sector_condition.sublime-syntax'

      - match: '(?<=})' #When the pushed condition file closes, we'll have a closing brace behind
        set: 'Packages/Stellaris/hidden/sector_condition.sublime-syntax'

      - match: '(?!limit)(?=\w)'
        set: 'Packages/Stellaris/hidden/sector_condition.sublime-syntax'
  - match: '(?i)\b(any_neighbor_country|any_bordering_country|any_country)\b{{equals_open_brace}}'
    captures:
      1: keyword.defined.block.altering
      2: sign.equals
      3: brace.open
    push:
      - meta_scope: condition country
      - match: \b(limit)\b{{equals_open_brace}}
        captures:
          1: keyword.defined.block
          2: sign.equals
          3: brace.open
        push: main

      - match: '(?<=})' #When the pushed condition file closes, we'll have a closing brace behind
        set: main

      - match: '(?!limit)(?=\w)'
        set: main
  - match: '(?i)\b(any_system_within_border|any_system|closest_system)\b{{equals_open_brace}}'
    captures:
      1: keyword.defined.block.altering
      2: sign.equals
      3: brace.open
    push:
      - meta_scope: condition system
      - match: \b(limit)\b{{equals_open_brace}}
        captures:
          1: keyword.defined.block
          2: sign.equals
          3: brace.open
        push: 'Packages/Stellaris/hidden/system_condition.sublime-syntax'

      - match: '(?<=})' #When the pushed condition file closes, we'll have a closing brace behind
        set: 'Packages/Stellaris/hidden/system_condition.sublime-syntax'

      - match: '(?!limit)(?=\w)'
        set: 'Packages/Stellaris/hidden/system_condition.sublime-syntax'
  - match: '(?i)\b(any_owned_pop)\b{{equals_open_brace}}'
    captures:
      1: keyword.defined.block.altering
      2: sign.equals
      3: brace.open
    push:
      - meta_scope: condition pop
      - match: \b(limit)\b{{equals_open_brace}}
        captures:
          1: keyword.defined.block
          2: sign.equals
          3: brace.open
        push: 'Packages/Stellaris/hidden/pop_condition.sublime-syntax'

      - match: '(?<=})' #When the pushed condition file closes, we'll have a closing brace behind
        set: 'Packages/Stellaris/hidden/pop_condition.sublime-syntax'

      - match: '(?!limit)(?=\w)'
        set: 'Packages/Stellaris/hidden/pop_condition.sublime-syntax'
  - match: '(?i)\b(any_war)\b{{equals_open_brace}}'
    captures:
      1: keyword.defined.block.altering
      2: sign.equals
      3: brace.open
    push:
      - meta_scope: condition war
      - match: \b(limit)\b{{equals_open_brace}}
        captures:
          1: keyword.defined.block
          2: sign.equals
          3: brace.open
        push: 'Packages/Stellaris/hidden/war_condition.sublime-syntax'

      - match: '(?<=})' #When the pushed condition file closes, we'll have a closing brace behind
        set: 'Packages/Stellaris/hidden/war_condition.sublime-syntax'

      - match: '(?!limit)(?=\w)'
        set: 'Packages/Stellaris/hidden/war_condition.sublime-syntax'
  - match: '(?i)\b(any_controlled_planet|any_owned_planet|any_planet_within_border)\b{{equals_open_brace}}'
    captures:
      1: keyword.defined.block.altering
      2: sign.equals
      3: brace.open
    push:
      - meta_scope: condition planet
      - match: \b(limit)\b{{equals_open_brace}}
        captures:
          1: keyword.defined.block
          2: sign.equals
          3: brace.open
        push: 'Packages/Stellaris/hidden/planet_condition.sublime-syntax'

      - match: '(?<=})' #When the pushed condition file closes, we'll have a closing brace behind
        set: 'Packages/Stellaris/hidden/planet_condition.sublime-syntax'

      - match: '(?!limit)(?=\w)'
        set: 'Packages/Stellaris/hidden/planet_condition.sublime-syntax'
  - match: '(?i)\b(any_owned_fleet)\b{{equals_open_brace}}'
    captures:
      1: keyword.defined.block.altering
      2: sign.equals
      3: brace.open
    push:
      - meta_scope: condition fleet
      - match: \b(limit)\b{{equals_open_brace}}
        captures:
          1: keyword.defined.block
          2: sign.equals
          3: brace.open
        push: 'Packages/Stellaris/hidden/fleet_condition.sublime-syntax'

      - match: '(?<=})' #When the pushed condition file closes, we'll have a closing brace behind
        set: 'Packages/Stellaris/hidden/fleet_condition.sublime-syntax'

      - match: '(?!limit)(?=\w)'
        set: 'Packages/Stellaris/hidden/fleet_condition.sublime-syntax'
  - match: '(?i)\b(any_owned_ship|any_ship)\b{{equals_open_brace}}'
    captures:
      1: keyword.defined.block.altering
      2: sign.equals
      3: brace.open
    push:
      - meta_scope: condition ship
      - match: \b(limit)\b{{equals_open_brace}}
        captures:
          1: keyword.defined.block
          2: sign.equals
          3: brace.open
        push: 'Packages/Stellaris/hidden/ship_condition.sublime-syntax'

      - match: '(?<=})' #When the pushed condition file closes, we'll have a closing brace behind
        set: 'Packages/Stellaris/hidden/ship_condition.sublime-syntax'

      - match: '(?!limit)(?=\w)'
        set: 'Packages/Stellaris/hidden/ship_condition.sublime-syntax'
  - match: '(?i)\b(any_owned_leader)\b{{equals_open_brace}}'
    captures:
      1: keyword.defined.block.altering
      2: sign.equals
      3: brace.open
    push:
      - meta_scope: condition leader
      - match: \b(limit)\b{{equals_open_brace}}
        captures:
          1: keyword.defined.block
          2: sign.equals
          3: brace.open
        push: 'Packages/Stellaris/hidden/leader_condition.sublime-syntax'

      - match: '(?<=})' #When the pushed condition file closes, we'll have a closing brace behind
        set: 'Packages/Stellaris/hidden/leader_condition.sublime-syntax'

      - match: '(?!limit)(?=\w)'
        set: 'Packages/Stellaris/hidden/leader_condition.sublime-syntax'
  - match: '(?i)\b(solar_system)\b{{equals_open_brace}}'
    captures:
      1: keyword.defined.block.altering
      2: sign.equals
      3: brace.open
    push: 'Packages/Stellaris/hidden/system_condition.sublime-syntax'
  - match: '(?i)\b(home_planet)\b{{equals_open_brace}}'
    captures:
      1: keyword.defined.block.altering
      2: sign.equals
      3: brace.open
    push: 'Packages/Stellaris/hidden/planet_condition.sublime-syntax'

  - include: 'Packages/Stellaris/hidden/constant_scopes.sublime-syntax'

  - match: '\b(switch)\b{{equals_open_brace}}'
    captures: 
      1: keyword.defined.block.constant
      2: sign.equals
      3: brace.open  
    push: main

  - match: '(?i)\b(war_demand_counter|opinion|num_owned_planets|influence|their_opinion|check_variable|energy|graphical_culture|has_opinion_modifier|has_established_contact|has_completed_event_chain_counter|has_relation_flag|reverse_has_relation_flag|intel_level|count_owned_pops|has_country_resource|num_killed_ships|num_taken_planets|count_owned_ships|research_leader|opposing_ethics_divergence|count_pop_factions|has_monthly_income|count_tech_options|last_increased_tech|has_point_of_interest|tech_unlocked_ratio|would_join_war|can_be_subject|or|not|and|hidden_trigger|switch|custom_tooltip_fail|custom_tooltip)\b{{equals_open_brace}}'
    captures:
      1: keyword.defined.block.constant
      2: sign.equals
      3: brace.open
    push: main
  - match: '(?i)\b(if)\b{{equals_open_brace}}'
    captures:
      1: keyword.defined.block.altering
      2: sign.equals
      3: brace.open
    push:
      - meta_scope: condition country
      - match: \b(limit)\b{{equals_open_brace}}
        captures:
          1: keyword.defined.block
          2: sign.equals
          3: brace.open
        push: 'Packages/Stellaris/hidden/country_condition.sublime-syntax'

      - match: '(?<=})' #When the pushed condition file closes, we'll have a closing brace behind
        set: main

      - match: '(?!limit)(?=\w)'
        set: main


  - match: '(?i)\b(fromfromfrom|fromfrom|from|prevprevprev|prevprev|prev|root|\w+:\w+)\b{{equals_open_brace}}'
    captures:
      1: effect.block.keyword.general
      2: sign.equals
      3: brace.open
    push: user_define_scope

  #SINGLE VALUE KEYWORDS
  - match: '(?i)\b(is_ai|has_trait|has_ethic|is_same_species|ideal_planet_class|is_same_empire|has_technology|has_country_flag|is_at_war|num_owned_planets|has_government|num_pops|is_primitive|is_pirate|influence|is_at_war_with|is_same_species_class|has_alliance|has_federation|has_global_flag|energy|has_country_edict|is_federation_leader|is_advisor_active|graphical_culture|is_country|is_tutorial_level|has_event_chain|is_species_class|has_edict|is_country_type|has_modifier|is_hostile|has_communications|is_war_leader|can_create_sector|is_in_alliance_with|is_in_federation_with|last_changed_policy|has_policy_flag|has_tech_option|last_increased_tech|is_threatened_to|is_protective_to|is_friendly_to|is_hostile_to|is_dismissive_to|is_patronizing_to|is_angry_to|is_neighbor_of|is_unfriendly_to|is_cordial_to|is_domineering_to|is_wary_to|has_election_type|has_ai_personality|has_ai_personality_type|has_ai_personality_behaviour|has_valid_ai_personality|grants_migration_access|is_subspecies|subject_can_diplomacy|has_surveyed_class|species_portrait|is_proposing_war_demands|always|exists|is_same_value|is_scope_valid|is_ironman|text|custom_tooltip|always|exists|is_same_value|is_scope_valid|is_ironman|text|custom_tooltip)\b\s*(=)\s*((?:\w|:|\.)+)'
    captures:
      1: keyword.defined.value
      2: sign.equals
      3: value.user.defined
  - match: '(?i)\b(is_ai|has_trait|has_ethic|is_same_species|ideal_planet_class|is_same_empire|has_technology|has_country_flag|is_at_war|num_owned_planets|has_government|num_pops|is_primitive|is_pirate|influence|is_at_war_with|is_same_species_class|has_alliance|has_federation|has_global_flag|energy|has_country_edict|is_federation_leader|is_advisor_active|graphical_culture|is_country|is_tutorial_level|has_event_chain|is_species_class|has_edict|is_country_type|has_modifier|is_hostile|has_communications|is_war_leader|can_create_sector|is_in_alliance_with|is_in_federation_with|last_changed_policy|has_policy_flag|has_tech_option|last_increased_tech|is_threatened_to|is_protective_to|is_friendly_to|is_hostile_to|is_dismissive_to|is_patronizing_to|is_angry_to|is_neighbor_of|is_unfriendly_to|is_cordial_to|is_domineering_to|is_wary_to|has_election_type|has_ai_personality|has_ai_personality_type|has_ai_personality_behaviour|has_valid_ai_personality|grants_migration_access|is_subspecies|subject_can_diplomacy|has_surveyed_class|species_portrait|is_proposing_war_demands|always|exists|is_same_value|is_scope_valid|is_ironman|text|custom_tooltip|always|exists|is_same_value|is_scope_valid|is_ironman|text|custom_tooltip)\b\s*(=)\s*(")' #SomeLocalisedValue
    captures:
      1: keyword.defined.value
      2: sign.equals
      3: value.localised
    push: localised

  #Unknown scope matches
  - match: '{{user_keyword}}\s*(=)\s*{{value_with_dots}}'
    captures:
      1: keyword.user.defined.value
      2: sign.equals
      3: value.user.defined

  - match: '{user_keyword}}\s*(=)\s*"'
    captures:
      1: keyword.user.defined.value
      2: sign.equals
      3: value.localised
    push: localised

  #Unknown scope matches
  - match: '{user_keyword}}\s*(=)\s*(@(?:\w|\.|:)+)'
    captures:
      1: keyword.user.defined.value
      2: sign.equals
      3: value.user.defined.constant

  - match: '{{user_keyword}}{{equals_open_brace}}'
    captures:
      1: keyword.user.defined.block
      2: sign.equals
      3: brace.open
    push: main

  - include: eat_end_brace
  - match: '#.*'
    scope: comment


  localised:
  - meta_scope: 'value.localised'
  - match: '"'
    pop: true

  eat_end_brace:
    - match: "}"
      scope: brace.end
      pop: true

  user_define_scope:
    - meta_content_scope: comment
    - match: '(?i)#\s*global'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/global_condition.sublime-syntax'
    - match: '(?i)#\s*country'
      scope: user_defined_scope
      set: main
    - match: '(?i)#\s*sector'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/sector_condition.sublime-syntax'
    - match: '(?i)#\s*system'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/system_condition.sublime-syntax'
    - match: '(?i)#\s*planet'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/planet_condition.sublime-syntax'
    - match: '(?i)#\s*ambient_object'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/ambient_object_condition.sublime-syntax'
    - match: '(?i)#\s*fleet'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/fleet_condition.sublime-syntax'
    - match: '(?i)#\s*ship'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/ship_condition.sublime-syntax'
    - match: '(?i)#\s*pop'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/pop_condition.sublime-syntax'
    - match: '(?i)#\s*pop_faction'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/pop_faction_condition.sublime-syntax'
    - match: '(?i)#\s*leader'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/leader_condition.sublime-syntax'
    - match: '(?i)#\s*war'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/war_condition.sublime-syntax'
    - match: '(?i)#\s*army'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/army_condition.sublime-syntax'
    - match: '(?i)#\s*tile'
      scope: user_defined_scope
      set: 'Packages/Stellaris/hidden/tile_condition.sublime-syntax'
    - match: '\n'
      set: main
    - match: '(?=\w)'
      set: main
      #pop: true    