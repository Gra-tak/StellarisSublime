{
	"scope": "source.stellaris",
	"completions":
	[
		{ "trigger": "capital_scope		Scopes to the capital planet of this country. (for trigger scope to the capital see: home_planet)", "contents": "capital_cope" },
		{ "trigger": "text		Shows custom text", "contents": "text" },
		{ "trigger": "custom_tooltip		Shows a custom tooltip for the effects within", "contents": "custom_tooltip" },
		{ "trigger": "if		A conditional trigger", "contents": "if" },
		{ "trigger": "and		All inside trigger must be true", "contents": "and" },
		{ "trigger": "or		At least one entry inside trigger must be true", "contents": "or" },
		{ "trigger": "not		Negates content of trigger", "contents": "not" },
		{ "trigger": "happiness		Compares pop happiness (not to be confused with the modifier pop_happiness which is applied to country)", "contents": "happiness" },
		{ "trigger": "has_ring		Checks if a planet has a ring or not (bool)", "contents": "has_ring" },
		{ "trigger": "hidden_trigger		Hides the tooltip for the effects within", "contents": "hidden_trigger" },
		{ "trigger": "has_owner		Checks if a planet is colonized", "contents": "has_owner" },
		{ "trigger": "any_owned_planet		Switches Scope to and goes through each owned planet (but not occupied planets)", "contents": "any_owned_planet" },
		{ "trigger": "any_controlled_planet		Switches scope to and goes through each controlled planets (= owned planets + occupied planets)", "contents": "any_controlled_planet" },
		{ "trigger": "is_ai		Checks if a country is AI controlled", "contents": "is_ai" },
		{ "trigger": "always		Either always false or true", "contents": "always" },
		{ "trigger": "has_trait		Checks if an empire's dominant species, pop, or leader has a certain Trait", "contents": "has_trait" },
		{ "trigger": "has_ethic		Checks if an empire's dominant species has a certain Ethic", "contents": "has_ethic" },
		{ "trigger": "is_moon		Checks if a planet is a moon", "contents": "is_moon" },
		{ "trigger": "opinion		Checks this country's opinion value of target country", "contents": "opinion" },
		{ "trigger": "any_pop		Switches scope to and goes through each pop unit on the planet or all pops of the scope species", "contents": "any_pop" },
		{ "trigger": "is_owned_by		Checks if a planet or galactic object is owned by target empire", "contents": "is_owned_by" },
		{ "trigger": "is_same_species		Checks if a pop or empire is of the same species as another pop or empire", "contents": "is_same_species" },
		{ "trigger": "any_war_defender		Switches scope to and goes through each defender in the war against a specified enemy", "contents": "any_war_defender" },
		{ "trigger": "any_war_attacker		Switches scope to and goes through each attacker in the war against a specified enemy", "contents": "any_war_attacker" },
		{ "trigger": "ideal_planet_class		Checks the ideal planet class of a target country", "contents": "ideal_planet_class" },
		{ "trigger": "is_same_empire		Checks if an empire is the same as another", "contents": "is_same_empire" },
		{ "trigger": "is_planet_class		Checks if a planet is of a certain class", "contents": "is_planet_class" },
		{ "trigger": "has_strategic_resource		Checks if a planet has a specific strategic resource", "contents": "has_strategic_resource" },
		{ "trigger": "is_star_class		Checks if a planet star is of a certain class", "contents": "is_star_class" },
		{ "trigger": "distance		Compares the min/max distance to a target with a value", "contents": "distance" },
		{ "trigger": "has_technology		Checks if a country has a technology of atleast a specific level", "contents": "has_technology" },
		{ "trigger": "has_planet_modifier		Checks if a planet has a planet modifier", "contents": "has_planet_modifier" },
		{ "trigger": "has_planet_flag		Checks if a planet has a specified flag", "contents": "has_planet_flag" },
		{ "trigger": "has_country_flag		Checks if a country has a specified flag", "contents": "has_country_flag" },
		{ "trigger": "has_fleet_flag		Checks if a fleet has a specified flag", "contents": "has_fleet_flag" },
		{ "trigger": "has_ship_flag		Checks if a ship has a specified flag", "contents": "has_ship_flag" },
		{ "trigger": "is_ship_class		Checks if a ship is a specified class", "contents": "is_ship_class" },
		{ "trigger": "is_ship_size		Checks if a ship is a specified size", "contents": "is_ship_size" },
		{ "trigger": "is_capital		Checks if a planet is its owners capital", "contents": "is_capital" },
		{ "trigger": "has_ground_combat		Checks if a planet has ground combat", "contents": "has_ground_combat" },
		{ "trigger": "is_at_war		Checks if a country is at war", "contents": "is_at_war" },
		{ "trigger": "num_owned_planets		Compares the number of owned planets in a country with a value", "contents": "num_owned_planets" },
		{ "trigger": "has_government		Checks if a country has a specified government", "contents": "has_government" },
		{ "trigger": "num_pops		Compares the number of pops on a planet with a value", "contents": "num_pops" },
		{ "trigger": "is_primitive		Checks if a country is primitive (bool)", "contents": "is_primitive" },
		{ "trigger": "is_inside_nebula		Checks if a planet/ship is inside a nebula", "contents": "is_inside_nebula" },
		{ "trigger": "is_pirate		Checks if a country is a pirate country (bool)", "contents": "is_pirate" },
		{ "trigger": "is_inside_border		Checks if a planet/ship/fleet is inside the border of the specified country", "contents": "is_inside_border" },
		{ "trigger": "any_country		Trigger Scope for any country", "contents": "any_country" },
		{ "trigger": "planet_size		Compares the planet size", "contents": "planet_size" },
		{ "trigger": "any_planet		Any planet in a solar system or sector (use any_controlled_planet or any_owned_planet for country)", "contents": "any_planet" },
		{ "trigger": "influence		Checks country influence", "contents": "influence" },
		{ "trigger": "is_star		Checks if a planet is a star", "contents": "is_star" },
		{ "trigger": "is_asteroid		Checks if a planet is an asteroid", "contents": "is_asteroid" },
		{ "trigger": "is_at_war_with		Checks if an empire is at war with another empire", "contents": "is_at_war_with" },
		{ "trigger": "their_opinion		Checks target country's opinion value of this country", "contents": "their_opinion" },
		{ "trigger": "is_same_species_class		Checks if a pop or empire is of the same species class as another pop or empire", "contents": "is_same_species_class" },
		{ "trigger": "has_alliance		Checks if a country is in an alliance (bool)", "contents": "has_alliance" },
		{ "trigger": "has_federation		Checks if a country is in an federation (bool)", "contents": "has_federation" },
		{ "trigger": "is_colonizable		Checks if a planet is colonizable (bool)", "contents": "is_colonizable" },
		{ "trigger": "gender		Checks the gender of a leader", "contents": "gender" },
		{ "trigger": "has_level		Checks if leader has at least specified level of specified skill", "contents": "has_level" },
		{ "trigger": "num_minerals		Compares the number of minerals on a planet with a value", "contents": "num_minerals" },
		{ "trigger": "num_physics		Compares the number of physics resources on a planet with a value", "contents": "num_physics" },
		{ "trigger": "num_society		Compares the number of society resources on a planet with a value", "contents": "num_society" },
		{ "trigger": "num_engineering		Compares the number of engineering resources on a planet with a value", "contents": "num_engineering" },
		{ "trigger": "num_modifiers		Compares the number of modifiers on a planet with a value", "contents": "num_modifiers" },
		{ "trigger": "has_any_strategic_resource		Checks whether a planet has any strategic resource (bool)", "contents": "has_any_strategic_resource" },
		{ "trigger": "free_leader_slots		Compares the number of free leader slots", "contents": "free_leader_slots" },
		{ "trigger": "has_pop_flag		Checks if a pop has a specified flag", "contents": "has_pop_flag" },
		{ "trigger": "is_occupied_flag		Checks if a planet is under military occupation", "contents": "is_occupied_flag" },
		{ "trigger": "can_colonize		Checks if a planet is colonizable by a country's founder species", "contents": "can_colonize" },
		{ "trigger": "is_damaged		Checks if a ship is damaged", "contents": "is_damaged" },
		{ "trigger": "has_hp		Compares the hit points of a ship with a value", "contents": "has_hp" },
		{ "trigger": "is_surveyed		Checks if a planet/system as been survey by specified country", "contents": "is_surveyed" },
		{ "trigger": "has_global_flag		Checks a global trigger", "contents": "has_global_flag" },
		{ "trigger": "check_variable		Compares the variable value", "contents": "check_variable" },
		{ "trigger": "any_planet_within_border		Switches Scope to and goes through each random planet within border", "contents": "any_planet_within_border" },
		{ "trigger": "any_owned_ship		Any ship owned by a country", "contents": "any_owned_ship" },
		{ "trigger": "any_ship		Any ship in the game", "contents": "any_ship" },
		{ "trigger": "energy		Checks for country energy", "contents": "energy" },
		{ "trigger": "pop_has_ethic		Checks if a pop has a certain Ethic", "contents": "pop_has_ethic" },
		{ "trigger": "pop_has_trait		Checks if a pop has a certain trait", "contents": "pop_has_trait" },
		{ "trigger": "is_colony		Checks if a planet is a colony", "contents": "is_colony" },
		{ "trigger": "habitability		Checks for species habitability on current planet", "contents": "habitability" },
		{ "trigger": "has_building		Checks if a planet or tile has a building", "contents": "has_building" },
		{ "trigger": "is_controlled_by		Checks if a planet is controlled by a certain country", "contents": "is_controlled_by" },
		{ "trigger": "is_terraformed		Checks if a planet has ever been terraformed", "contents": "is_terraformed" },
		{ "trigger": "is_terraforming		Checks if a planet is being terraformed right now", "contents": "is_terraforming" },
		{ "trigger": "has_planet_edict		Checks if a planet has an edict", "contents": "has_planet_edict" },
		{ "trigger": "has_country_edict		Checks if a country has an edict", "contents": "has_country_edict" },
		{ "trigger": "has_observation_outpost		Checks if a planet has an observation outpost", "contents": "has_observation_outpost" },
		{ "trigger": "is_federation_leader		Checks if a country is a federation leader", "contents": "is_federation_leader" },
		{ "trigger": "starting_system		Checks if a system is the starting system for an empire", "contents": "starting_system" },
		{ "trigger": "has_star_flag		Checks if a star has a specified flag", "contents": "has_star_flag" },
		{ "trigger": "has_mining_station		Checks if a planet has a mining station", "contents": "has_mining_station" },
		{ "trigger": "has_research_station		Checks if a planet has a research station", "contents": "has_research_station" },
		{ "trigger": "has_spaceport		Checks if a planet has a spaceport", "contents": "has_spaceport" },
		{ "trigger": "any_spaceport		Any spaceport trigger", "contents": "any_spaceport" },
		{ "trigger": "any_research_station		Any research station outpost", "contents": "any_research_station" },
		{ "trigger": "any_mining_station		Any mining station outpost", "contents": "any_mining_station" },
		{ "trigger": "any_system		Any system trigger", "contents": "any_system" },
		{ "trigger": "any_system_within_border		Any system within border trigger", "contents": "any_system_within_border" },
		{ "trigger": "army_type		Checks what type an army type is", "contents": "army_type" },
		{ "trigger": "has_army		Checks if a planet has an army", "contents": "has_army" },
		{ "trigger": "is_advisor_active		Checks if a country has an advisor", "contents": "is_advisor_active" },
		{ "trigger": "count_pops		Counts the amount of pops which fill a requirement and compare it to a number", "contents": "count_pops" },
		{ "trigger": "is_enslaved		Checks if a pop is enslaved", "contents": "is_enslaved" },
		{ "trigger": "is_being_purged		Checks if a pop is being exterminated", "contents": "is_being_purged" },
		{ "trigger": "graphical_culture		Checks if a country has specified graphical culture", "contents": "graphical_culture" },
		{ "trigger": "income		Compares country income.", "contents": "income" },
		{ "trigger": "expenses		Compares country expenses.", "contents": "expenses" },
		{ "trigger": "produced_energy		Compares the amount of produced energy of a country.", "contents": "produced_energy" },
		{ "trigger": "trade_income		Compares the previous months income from the trade of a country.", "contents": "trade_income" },
		{ "trigger": "trade_expenses		Compares the previous months expenses from the trade of a country.", "contents": "trade_expenses" },
		{ "trigger": "ship_maintenance		Compares the previous months ship maintenance of a country.", "contents": "ship_maintenance" },
		{ "trigger": "army_maintenance		Compares the previous months army maintenance of a country.", "contents": "army_maintenance" },
		{ "trigger": "colony_maintenance		Compares the previous months colony maintenance of a country.", "contents": "colony_maintenance" },
		{ "trigger": "station_maintenance		Compares the previous months station maintenance of a country.", "contents": "station_maintenance" },
		{ "trigger": "construction_expenses		Compares the previous months construction expenses of a country.", "contents": "construction_expenses" },
		{ "trigger": "federation_expenses		Compares the previous months federation expenses of a country.", "contents": "federation_expenses" },
		{ "trigger": "has_anomaly		Checks if a planet has a anomaly", "contents": "has_anomaly" },
		{ "trigger": "stored_physics_points		Compares the amount of stored physics points a country has.", "contents": "stored_physics_points" },
		{ "trigger": "stored_society_points		Compares the amount of stored society points a country has.", "contents": "stored_society_points" },
		{ "trigger": "stored_engineering_points		Compares the amount of stored engineering points a country has.", "contents": "stored_engineering_points" },
		{ "trigger": "balance		Compares country balance.", "contents": "balance" },
		{ "trigger": "running_balance		Compares country running balance.", "contents": "running_balance" },
		{ "trigger": "is_planet		Checks if a planet is of the same as the scope", "contents": "is_planet" },
		{ "trigger": "is_pop		Checks if a pop is of the same as the scope", "contents": "is_pop" },
		{ "trigger": "is_ship		Checks if a ship is of the same as the scope", "contents": "is_ship" },
		{ "trigger": "is_army		Checks if an army is of the same as the scope", "contents": "is_army" },
		{ "trigger": "is_country		Checks if a country is of the same as the scope", "contents": "is_country" },
		{ "trigger": "is_tutorial_level		Compares the tutorial level of the player of a country.", "contents": "is_tutorial_level" },
		{ "trigger": "is_multiplayer		Checks if the game is running in multiplayer", "contents": "is_multiplayer" },
		{ "trigger": "has_event_chain		Checks if the country has an event chain", "contents": "has_event_chain" },
		{ "trigger": "is_species_class		Checks if the founder species of a country, or a pop is of a specific species", "contents": "is_species_class" },
		{ "trigger": "vassals		Compares the number of vassals", "contents": "vassals" },
		{ "trigger": "has_opinion_modifier		Checks if the country has an opinion modifier", "contents": "has_opinion_modifier" },
		{ "trigger": "has_established_contact		Checks if the country has contact with another country.", "contents": "has_established_contact" },
		{ "trigger": "has_completed_event_chain_counter		Checks if the country has completed counter in event chain.", "contents": "has_completed_event_chain_counter" },
		{ "trigger": "has_planet_class		Checks if a star has planet of certain class", "contents": "has_planet_class" },
		{ "trigger": "is_disabled		Checks if a ship or fleet is disabled", "contents": "is_disabled" },
		{ "trigger": "has_existing_ship_design		Checks if a country has a specific ship design", "contents": "has_existing_ship_design" },
		{ "trigger": "has_grown_pop		Checks if a planet or tile has a grown pop", "contents": "has_grown_pop" },
		{ "trigger": "has_growing_pop		Checks if a planet or tile has a growing pop", "contents": "has_growing_pop" },
		{ "trigger": "has_resource		Compares the resources of planet or tile.", "contents": "has_resource" },
		{ "trigger": "has_building_construction		Checks if a planet or tile has a building construction", "contents": "has_building_construction" },
		{ "trigger": "any_neighboring_tile		Switches scope to and goes through each neighboring tile", "contents": "any_neighboring_tile" },
		{ "trigger": "any_tile		Switches scope to and goes through each tile", "contents": "any_tile" },
		{ "trigger": "has_blocker		Checks if a planet or tile has a blocker", "contents": "has_blocker" },
		{ "trigger": "free_pop_tiles		Compares a value with the amount of free tiles for pops", "contents": "free_pop_tiles" },
		{ "trigger": "free_building_tiles		Compares a value with the amount of free tiles for buildings", "contents": "free_building_tiles" },
		{ "trigger": "has_relation_flag		Checks for relation flags", "contents": "has_relation_flag" },
		{ "trigger": "reverse_has_relation_flag		Checks for reverse relation flags", "contents": "reverse_has_relation_flag" },
		{ "trigger": "exists		Checks for object existance", "contents": "exists" },
		{ "trigger": "has_edict		Checks if a planet or country has an edict activated", "contents": "has_edict" },
		{ "trigger": "has_moon		Checks if a planet has a moon", "contents": "has_moon" },
		{ "trigger": "num_moons		Compares number of moons of planet.", "contents": "num_moons" },
		{ "trigger": "is_in_cluster		Checks if a galactic object belongs to a cluster", "contents": "is_in_cluster" },
		{ "trigger": "any_moon		Any moon trigger", "contents": "any_moon" },
		{ "trigger": "num_adjacent_tiles		Adjacent tiles with a value", "contents": "num_adjacent_tiles" },
		{ "trigger": "is_sentient		Checks if a pop is sentient", "contents": "is_sentient" },
		{ "trigger": "leader_class		Checks if a leader is a specific type", "contents": "leader_class" },
		{ "trigger": "is_preventing_anomaly		Checks if a planet is currently preventing anomalies", "contents": "is_preventing_anomaly" },
		{ "trigger": "observation_outpost_owner		Owner of an observation outpost", "contents": "observation_outpost_owner" },
		{ "trigger": "observation_outpost		Observation outpost", "contents": "observation_outpost" },
		{ "trigger": "has_deposit		Checks if a tile/planet has a deposit", "contents": "has_deposit" },
		{ "trigger": "has_deposit_for		Checks if a tile has a deposit for specific ship class", "contents": "has_deposit_for" },
		{ "trigger": "colony_age		Colony age in months compared with a value", "contents": "colony_age" },
		{ "trigger": "is_rim_system		Checks if a system is on the galactic rim", "contents": "is_rim_system" },
		{ "trigger": "any_rim_system		Switches scope to and goes through each rim system", "contents": "any_rim_system" },
		{ "trigger": "has_mission		Checks if a fleet has a certain mission", "contents": "has_mission" },
		{ "trigger": "is_country_type		Checks if country is of specified type", "contents": "is_country_type" },
		{ "trigger": "has_modifier		Checks if scope object has a modifier", "contents": "has_modifier" },
		{ "trigger": "switch		Switches between scopes", "contents": "switch" },
		{ "trigger": "sectors		Compares number of sectors", "contents": "sectors" },
		{ "trigger": "num_fleets		Checks if a country has the said number of fleets", "contents": "num_fleets" },
		{ "trigger": "num_ships		Checks if a country has the said number of ships", "contents": "num_ships" },
		{ "trigger": "any_ship_in_system		Any ship in system", "contents": "any_ship_in_system" },
		{ "trigger": "mission_progress		Checks if a mission has a certain progress", "contents": "mission_progress" },
		{ "trigger": "num_ethics		Compares the number of ethics with a value", "contents": "num_ethics" },
		{ "trigger": "num_traits		Compares the number of traits with a value", "contents": "num_traits" },
		{ "trigger": "has_truce		Checks if a country has truce with certain country", "contents": "has_truce" },
		{ "trigger": "has_access_military		Checks if a country has military access to a system", "contents": "has_access_military" },
		{ "trigger": "has_access_civilian		Checks if a country has civilian access to a system", "contents": "has_access_civilian" },
		{ "trigger": "has_access_construction		Checks if a country has constraction access to a system", "contents": "has_access_construction" },
		{ "trigger": "is_ringworld		Checks if a planet is a ringworld", "contents": "is_ringworld" },
		{ "trigger": "member_of_faction		Checks if pop is a member of a faction ( targets yes/no/specific faction )", "contents": "member_of_faction" },
		{ "trigger": "support		Compares the relative support of a pop faction", "contents": "support" },
		{ "trigger": "is_ideal_planet_class		Checks if a planet is of ideal class for country", "contents": "is_ideal_planet_class" },
		{ "trigger": "is_pop_faction_type		Checks if pop faction is specific type", "contents": "is_pop_faction_type" },
		{ "trigger": "is_same_value		Checks if two scopes have the same value", "contents": "is_same_value" },
		{ "trigger": "sector_controlled		Checks if the planet/fleet is controlled by the sector", "contents": "sector_controlled" },
		{ "trigger": "sectors_over_limit		Compares number of sectors over the limit", "contents": "sectors_over_limit" },
		{ "trigger": "is_orbital_tile		Checks if a tile is the tile that stations collect from", "contents": "is_orbital_tile" },
		{ "trigger": "orbital_bombardment		Checks the orbital bombardment status of a planet", "contents": "orbital_bombardment" },
		{ "trigger": "intel_level		Checks if scope-country has intel level </>/= [level] in [system] ( intel_level = { level > low system = FROMFROM } )", "contents": "intel_level" },
		{ "trigger": "members		Compares the number of alliance members", "contents": "members" },
		{ "trigger": "is_researching_area		Checks if a leader is researching a specific area", "contents": "is_researching_area" },
		{ "trigger": "any_owned_leader		Switches Scope to and goes through each owned leader", "contents": "any_owned_leader" },
		{ "trigger": "any_owned_pop		Switches scope to and goes through each pop unit on the planet or all pops of the scope species", "contents": "any_owned_pop" },
		{ "trigger": "has_faction		Checks if an empire has a certain faction type", "contents": "has_faction" },
		{ "trigger": "count_owned_pops		Counts the amount of pops which fill a requirement and compare it to a number", "contents": "count_owned_pops" },
		{ "trigger": "can_declare_war		Checks if we can declare war against a target", "contents": "can_declare_war" },
		{ "trigger": "is_hostile		Checks if country is hostile against a target", "contents": "is_hostile" },
		{ "trigger": "has_communications		Checks if country has communication with another country", "contents": "has_communications" },
		{ "trigger": "has_country_resource		Compares the stored resources of a country.", "contents": "has_country_resource" },
		{ "trigger": "has_leader_flag		Checks if a leader has a specified flag", "contents": "has_leader_flag" },
		{ "trigger": "num_killed_ships		Compares how many ships scope country has killed of [target]", "contents": "num_killed_ships" },
		{ "trigger": "num_taken_planets		Compares how many planets scope country has taken from [target]", "contents": "num_taken_planets" },
		{ "trigger": "count_ships		Compares number of ships in a fleet that matches the [limit = {..}]", "contents": "count_ships" },
		{ "trigger": "count_owned_ships		Compares number of ships in a country that matches the [limit = {..}]", "contents": "count_owned_ships" },
		{ "trigger": "has_pop_faction_flag		Checks if a pop faction has a specified flag", "contents": "has_pop_faction_flag" },
		{ "trigger": "research_leader		Switches Scope to and goes to research leader", "contents": "research_leader" },
		{ "trigger": "leader_of_faction		Checks if leader is the leader of a faction ( targets yes/no/specific faction )", "contents": "leader_of_faction" },
		{ "trigger": "is_scope_valid		Checks if the current scope is valid", "contents": "is_scope_valid" },
		{ "trigger": "opposing_ethics_divergence		Compares the opposing ethics divergence.", "contents": "opposing_ethics_divergence" },
		{ "trigger": "is_war_leader		Checks if country is war leader", "contents": "is_war_leader" },
		{ "trigger": "can_create_sector		Checks if a sector can be created on the targeted planet", "contents": "can_create_sector" },
		{ "trigger": "is_in_alliance_with		Checks if country is in an alliance with target country", "contents": "is_in_alliance_with" },
		{ "trigger": "is_in_federation_with		Checks if country is in a federation with target country", "contents": "is_in_federation_with" },
		{ "trigger": "can_change_policy		Checks if a country can change anything with a policy", "contents": "can_change_policy" },
		{ "trigger": "count_pop_factions		Counts the amount of pop factions which fill a requirement and compare it to a number", "contents": "count_pop_factions" },
		{ "trigger": "has_fleet_order		Checks if a ship or a fleet has a fleet order", "contents": "has_fleet_order" },
		{ "trigger": "closest_system		Switches scope to closest system that passes limit", "contents": "closest_system" },
		{ "trigger": "num_communications		Compares the number of planets on a planet with a value", "contents": "num_communications" },
		{ "trigger": "is_ironman		Check if current game is ironman.", "contents": "is_ironman" },
		{ "trigger": "has_monthly_income		Checks monthly income of resource compared against specific value", "contents": "has_monthly_income" },
		{ "trigger": "last_changed_policy		Checks the last changed policy of a country against specified policy", "contents": "last_changed_policy" },
		{ "trigger": "any_sector		Switches scope to and goes through each sector of a country", "contents": "any_sector" },
		{ "trigger": "has_policy_flag		Checks if a country has a policy", "contents": "has_policy_flag" },
		{ "trigger": "any_owned_fleet		Any fleet owned by a country", "contents": "any_owned_fleet" },
		{ "trigger": "count_deposits		Counts number of deposits of given type on planet or tile", "contents": "count_deposits" },
		{ "trigger": "has_ground_support_stance		Checks if a fleet has a certain bombardment stance", "contents": "has_ground_support_stance" },
		{ "trigger": "has_tech_option		Checks if a country has a technology option", "contents": "has_tech_option" },
		{ "trigger": "is_species		Checks if the founder species of a country, or a pop is of a specific species", "contents": "is_species" },
		{ "trigger": "count_tech_options		Compares the amount of tech options a country has against a value, can specify which area", "contents": "count_tech_options" },
		{ "trigger": "last_increased_tech		Compares against the last increased tech of a country", "contents": "last_increased_tech" },
		{ "trigger": "has_country_strategic_resource		Compares the resources of a country.", "contents": "has_country_strategic_resource" },
		{ "trigger": "has_point_of_interest		Checks if the scope location has a point of interest", "contents": "has_point_of_interest" },
		{ "trigger": "is_being_repaired		Checks if a fleet or ship is being repaired", "contents": "is_being_repaired" },
		{ "trigger": "any_war		Switches Scope to any war", "contents": "any_war" },
		{ "trigger": "any_defender		Switches Scope to any defender in the war", "contents": "any_defender" },
		{ "trigger": "any_attacker		Switches Scope to any attacker in the war", "contents": "any_attacker" },
		{ "trigger": "has_orbital_station		Checks if a planet has an orbital station", "contents": "has_orbital_station" },
		{ "trigger": "any_orbital_station		Any orbital station", "contents": "any_orbital_station" },
		{ "trigger": "has_prev_building		Checks if a tile previously had a building (only latest building)", "contents": "has_prev_building" },
		{ "trigger": "any_ambient_object		Any ambient object trigger", "contents": "any_ambient_object" },
		{ "trigger": "any_system_ambient_object		Any system ambient object trigger", "contents": "any_system_ambient_object" },
		{ "trigger": "has_ambient_object_flag		Checks if an ambient object has a specified flag", "contents": "has_ambient_object_flag" },
		{ "trigger": "war_demand_counter		Compares a war demand trigger", "contents": "war_demand_counter" },
		{ "trigger": "attacker_war_score		Checks the war score of the attackers in a war", "contents": "attacker_war_score" },
		{ "trigger": "defender_war_score		Checks the war score of the defenders in a war", "contents": "defender_war_score" },
		{ "trigger": "off_war_score_sum		Checks the sum of war score in all offensive wars", "contents": "off_war_score_sum" },
		{ "trigger": "def_war_score_sum		Checks the sum of war score in all defensive wars", "contents": "def_war_score_sum" },
		{ "trigger": "any_bordering_country		Any bordering country", "contents": "any_bordering_country" },
		{ "trigger": "galaxy_percentage		Checks if the scope owns systems corresponding to a certain galaxy percentage", "contents": "galaxy_percentage" },
		{ "trigger": "custom_tooltip_fail		Shows custom text when trigger is failing", "contents": "custom_tooltip_fail" },
		{ "trigger": "count_armies		Counts the amount of armies which fill a requirement and compare it to a number", "contents": "count_armies" },
		{ "trigger": "original_owner		Checks if a planet is still owned by first colonizer", "contents": "original_owner" },
		{ "trigger": "is_in_combat		Checks if a fleet or ship is being repaired", "contents": "is_in_combat" },
		{ "trigger": "any_member		Any member in an alliance", "contents": "any_member" },
		{ "trigger": "is_guaranteeing		Checks if scope country is guaranteeing target country", "contents": "is_guaranteeing" },
		{ "trigger": "is_war_participant		Checks if a country is participating in scope war", "contents": "is_war_participant" },
		{ "trigger": "is_homeworld		Checks if a planet is its owners homeworld", "contents": "is_homeworld" },
		{ "trigger": "years_passed		Compares the number of years that have passed since game start with a value", "contents": "years_passed" },
		{ "trigger": "is_threatened_to		Attitude check, if country is threatened by target country", "contents": "is_threatened_to" },
		{ "trigger": "is_protective_to		Attitude check, if country is protective of target country", "contents": "is_protective_to" },
		{ "trigger": "is_friendly_to		Attitude check, if country is friendly to target country", "contents": "is_friendly_to" },
		{ "trigger": "is_hostile_to		Attitude check, if country is hostile to target country", "contents": "is_hostile_to" },
		{ "trigger": "is_ruined		Checks if a building is ruined or not", "contents": "is_ruined" },
		{ "trigger": "is_dismissive_to		Attitude check, if country is dismissive of target country", "contents": "is_dismissive_to" },
		{ "trigger": "is_patronizing_to		Attitude check, if country is patronizing to target country", "contents": "is_patronizing_to" },
		{ "trigger": "is_angry_to		Attitude check, if country is angry at target country", "contents": "is_angry_to" },
		{ "trigger": "is_neighbor_of		Checks if planet is neighbors of country", "contents": "is_neighbor_of" },
		{ "trigger": "any_neighbor_country		Trigger Scope for any neighboring country", "contents": "any_neighbor_country" },
		{ "trigger": "is_rival		Attitude check, if country is a rival of target country", "contents": "is_rival" },
		{ "trigger": "is_unfriendly_to		Attitude check, if country is unfriendly to target country", "contents": "is_unfriendly_to" },
		{ "trigger": "is_loyal_to		Attitude check, if country is loyal to target country", "contents": "is_loyal_to" },
		{ "trigger": "is_disloyal_to		Attitude check, if country is disloyal to target country", "contents": "is_disloyal_to" },
		{ "trigger": "is_cordial_to		Attitude check, if country is cordial to target country", "contents": "is_cordial_to" },
		{ "trigger": "is_domineering_to		Attitude check, if country is domineering towards target country", "contents": "is_domineering_to" },
		{ "trigger": "is_wary_to		Attitude check, if country is wary of target country", "contents": "is_wary_to" },
		{ "trigger": "fleet_power		Checks country fleet power", "contents": "fleet_power" },
		{ "trigger": "has_election_type		Checks if a country has a specified election type", "contents": "has_election_type" },
		{ "trigger": "has_ai_personality		Checks if an Empire has a certain personality type", "contents": "has_ai_personality" },
		{ "trigger": "has_ai_personality_type		Checks if an Empire has a certain personality type", "contents": "has_ai_personality_type" },
		{ "trigger": "has_ai_personality_behaviour		Checks if an Empire has a certain personality behaviour", "contents": "has_ai_personality_behaviour" },
		{ "trigger": "has_valid_ai_personality		Checks if a country has a valid ai", "contents": "has_valid_ai_personality" },
		{ "trigger": "has_migration_access		Checks if scope country has migration access to target country", "contents": "has_migration_access" },
		{ "trigger": "grants_migration_access		Checks if a country grants migration access to anyone", "contents": "grants_migration_access" },
		{ "trigger": "tech_unlocked_ratio		Ratio of tech between this and from", "contents": "tech_unlocked_ratio" },
		{ "trigger": "has_special_project		Checks if a country has a special project available", "contents": "has_special_project" },
		{ "trigger": "would_join_war		Checks if a country would join the side of a certain country in a hypothetical war", "contents": "would_join_war" },
		{ "trigger": "can_be_subject		Checks if country can be subject of 'subject_type' under 'overlord'", "contents": "can_be_subject" },
		{ "trigger": "has_skill		Checks level of skill for a leader", "contents": "has_skill" },
		{ "trigger": "has_experience		Checks amount of experience for a leader", "contents": "has_experience" },
		{ "trigger": "any_neighbor_system		Trigger Scope for any neighboring system", "contents": "any_neighbor_system" },
		{ "trigger": "is_under_colonization		Checks if a planet is being colonized (bool)", "contents": "is_under_colonization" },
		{ "trigger": "has_colony_progress		Checks progress of establishing a colony on planet", "contents": "has_colony_progress" },
		{ "trigger": "is_growing		Checks if a pop is growing", "contents": "is_growing" },
		{ "trigger": "is_colony_pop		Checks if a pop is a colony pop", "contents": "is_colony_pop" },
		{ "trigger": "is_subspecies		Checks if a pop or empire is a subspecies of the same species as another pop or empire", "contents": "is_subspecies" },
		{ "trigger": "is_valid		Checks to see if the target of a scope is valid", "contents": "is_valid" },
		{ "trigger": "fortification_health		Compares a value with fortification health percentage", "contents": "fortification_health" },
		{ "trigger": "subject_can_diplomacy		Checks if we are allowed by our overlord to do certain diplomatic actions", "contents": "subject_can_diplomacy" },
		{ "trigger": "has_surveyed_class		Checks a country has surveyed planet class trigger", "contents": "has_surveyed_class" },
		{ "trigger": "fleet_size		Checks fleet size", "contents": "fleet_size" },
		{ "trigger": "check_pop_faction_parameter		Compares a pop faction parameter against a value", "contents": "check_pop_faction_parameter" },
		{ "trigger": "is_robot_pop		Checks if the pop is of a robotic species class.", "contents": "is_robot_pop" },
		{ "trigger": "host_has_dlc		Checks if the host has a certain dlc enabled", "contents": "host_has_dlc" },
		{ "trigger": "local_has_dlc		Checks if the host has a certain dlc enabled", "contents": "local_has_dlc" },
		{ "trigger": "num_rare_techs		Compares number of researched rare technologies", "contents": "num_rare_techs" },
		{ "trigger": "is_core_sector		Checks if the current sector is the country's core sector", "contents": "is_core_sector" },
		{ "trigger": "has_mandate		Checks if a leader has mandate <yes/no/mandate_key>", "contents": "has_mandate" },
		{ "trigger": "has_spaceport_module		Checks if a spaceport has a module upgrade", "contents": "has_spaceport_module" },
		{ "trigger": "has_free_spaceport_module_slot		Checks if a spaceport has a free module slot", "contents": "has_free_spaceport_module_slot" },
		{ "trigger": "is_spaceport_module_slot_free		Checks if a specific spaceport module slot is free", "contents": "is_spaceport_module_slot_free" },
		{ "trigger": "can_build_spaceport_module		Checks if a spaceport is allowed to build a specific module upgrade", "contents": "can_build_spaceport_module" },
		{ "trigger": "num_free_spaceport_module_slots		Compares the parameter to the amount of free spaceport module slots", "contents": "num_free_spaceport_module_slots" },
		{ "trigger": "num_spaceport_modules		Compares the parameter to the amount of spaceport modules", "contents": "num_spaceport_modules" },
		{ "trigger": "species_portrait		Checks if a species uses a certain portrait.", "contents": "species_portrait" },
		{ "trigger": "num_armies		Checks if a country has the said number of armies", "contents": "num_armies" },
		{ "trigger": "is_proposing_war_demands		Checks if currently proposing wardemands or handling existing wardemands", "contents": "is_proposing_war_demands" },
		{ "trigger": "tooltip		Just a tooltip", "contents": "tooltip" },
		{ "trigger": "hidden_effect		Effect not shown in tooltips", "contents": "hidden_effect" },
		{ "trigger": "custom_tooltip		Just a tooltip", "contents": "custom_tooltip" },
		{ "trigger": "if		A conditional effect", "contents": "if" },
		{ "trigger": "random		A random effect", "contents": "random" },
		{ "trigger": "random_list		A random effect", "contents": "random_list" },
		{ "trigger": "every_owned_planet		Switches Scope to and goes through all owned planets", "contents": "every_owned_planet" },
		{ "trigger": "random_owned_planet		Picks a random owned planet", "contents": "random_owned_planet" },
		{ "trigger": "every_controlled_planet		Switches Scope to and goes through all controlled planets", "contents": "every_controlled_planet" },
		{ "trigger": "random_controlled_planet		Picks a random controlled planet", "contents": "random_controlled_planet" },
		{ "trigger": "create_ship_design		Creates a new ship design", "contents": "create_ship_design" },
		{ "trigger": "change_government		Change government in Empire.", "contents": "change_government" },
		{ "trigger": "add_energy		Adds a sum of energy to a country", "contents": "add_energy" },
		{ "trigger": "add_minerals		Adds Minerals to a planet, tile or country", "contents": "add_minerals" },
		{ "trigger": "add_physics		Adds Physics resources to a planet", "contents": "add_physics" },
		{ "trigger": "add_society		Adds Society resources to a planet", "contents": "add_society" },
		{ "trigger": "add_engineering		Adds Engineering resources to a planet", "contents": "add_engineering" },
		{ "trigger": "every_war_defender		Switches Scope to and goes through all defenders in a war with a specified enemy", "contents": "every_war_defender" },
		{ "trigger": "set_owner		Sets the owner of a planet or fleet.", "contents": "set_owner" },
		{ "trigger": "every_war_attacker		Switches Scope to and goes through all attackers in a war with a specified enemy", "contents": "every_war_attacker" },
		{ "trigger": "random_war_defender		Switches Scope to and picks a random defender in a war with a specified enemy", "contents": "random_war_defender" },
		{ "trigger": "random_war_attacker		Switches Scope to and picks a random attacker in a war with a specified enemy", "contents": "random_war_attacker" },
		{ "trigger": "give_technology		Gives a specific tech to an empire.", "contents": "give_technology" },
		{ "trigger": "enable_special_project		Enables a special research project for a country", "contents": "enable_special_project" },
		{ "trigger": "add_resource		Adds a resource to a planet or tile", "contents": "add_resource" },
		{ "trigger": "add_physics_research		Adds stored Physics research points to a county", "contents": "add_physics_research" },
		{ "trigger": "add_society_research		Adds stored Society research points to a county", "contents": "add_society_research" },
		{ "trigger": "add_engineering_research		Adds stored Engineering research points to a county", "contents": "add_engineering_research" },
		{ "trigger": "set_country_flag		Sets a flag on a country", "contents": "set_country_flag" },
		{ "trigger": "set_planet_flag		Sets a flag on a planet", "contents": "set_planet_flag" },
		{ "trigger": "set_fleet_flag		Sets a flag on a fleet", "contents": "set_fleet_flag" },
		{ "trigger": "set_ship_flag		Sets a flag on a ship", "contents": "set_ship_flag" },
		{ "trigger": "remove_country_flag		Removes a flag from a country", "contents": "remove_country_flag" },
		{ "trigger": "remove_planet_flag		Removes a flag from a planet", "contents": "remove_planet_flag" },
		{ "trigger": "remove_fleet_flag		Removes a flag from a fleet", "contents": "remove_fleet_flag" },
		{ "trigger": "remove_ship_flag		Removes a flag from a ship", "contents": "remove_ship_flag" },
		{ "trigger": "every_owned_ship		Switches Scope to and goes through all owned ships", "contents": "every_owned_ship" },
		{ "trigger": "random_owned_ship		Picks a random owned ship", "contents": "random_owned_ship" },
		{ "trigger": "create_species		Creates a new species", "contents": "create_species" },
		{ "trigger": "create_country		Creates a new country", "contents": "create_country" },
		{ "trigger": "create_fleet		Creates a new fleet", "contents": "create_fleet" },
		{ "trigger": "create_army		Creates a new army", "contents": "create_army" },
		{ "trigger": "set_location		Sets the location of a fleet.", "contents": "set_location" },
		{ "trigger": "create_ship		Creates a new ship", "contents": "create_ship" },
		{ "trigger": "set_primitive		Sets primitive status for a country", "contents": "set_primitive" },
		{ "trigger": "create_pop		Creates a new pop", "contents": "create_pop" },
		{ "trigger": "create_colony		Creates a colony", "contents": "create_colony" },
		{ "trigger": "set_capital		Sets planet to capital of a country", "contents": "set_capital" },
		{ "trigger": "change_pc		Change planet class of planet.", "contents": "change_pc" },
		{ "trigger": "random_country		Picks a random country", "contents": "random_country" },
		{ "trigger": "random_pop		Picks a random pop", "contents": "random_pop" },
		{ "trigger": "kill_pop		Kills pop", "contents": "kill_pop" },
		{ "trigger": "enslave_pop		Enslave/Emancipate pop", "contents": "enslave_pop" },
		{ "trigger": "destroy_colony		Destroys the colony on the planet", "contents": "destroy_colony" },
		{ "trigger": "every_system_planet		Switches Scope to planet and goes through all planets in the system", "contents": "every_system_planet" },
		{ "trigger": "surveyed		Sets a planet as surveyed by a specific country", "contents": "surveyed" },
		{ "trigger": "add_experience		Adds specified amount of experience to specified skill on scope leader", "contents": "add_experience" },
		{ "trigger": "set_ring		Adds or removes the ring around a planet", "contents": "set_ring" },
		{ "trigger": "create_mining_station		Creates a mining station", "contents": "create_mining_station" },
		{ "trigger": "create_research_station		Creates a research station", "contents": "create_research_station" },
		{ "trigger": "set_pop_flag		Sets a flag on a pop", "contents": "set_pop_flag" },
		{ "trigger": "remove_pop_flag		Removes a flag from a pop", "contents": "remove_pop_flag" },
		{ "trigger": "every_owned_pop		Switches scope to pop and goes through all pops on planet or in country", "contents": "every_owned_pop" },
		{ "trigger": "set_name		Changes the name of a scope target", "contents": "set_name" },
		{ "trigger": "random_planet		Executes on a random planet", "contents": "random_planet" },
		{ "trigger": "add_modifier		Gives a specific modifier to a planet.", "contents": "add_modifier" },
		{ "trigger": "create_leader		Creates a new leader", "contents": "create_leader" },
		{ "trigger": "reduce_hp		Reduces the hitpoints of a ship by the points given", "contents": "reduce_hp" },
		{ "trigger": "reduce_hp_percent		Reduces the hitpoints of a ship by the percentage given", "contents": "reduce_hp_percent" },
		{ "trigger": "repair_ship		Restores a damaged ship to its full HP", "contents": "repair_ship" },
		{ "trigger": "destroy_country		Removes a flag from a country", "contents": "destroy_country" },
		{ "trigger": "set_variable		Sets a variable value", "contents": "set_variable" },
		{ "trigger": "remove_global_flag		Removes a flag from a country", "contents": "remove_global_flag" },
		{ "trigger": "set_global_flag		Sets a global flag", "contents": "set_global_flag" },
		{ "trigger": "change_variable		Changes a variable value", "contents": "change_variable" },
		{ "trigger": "random_planet_within_border		Picks a random planet within country border", "contents": "random_planet_within_border" },
		{ "trigger": "every_pop		Fires a Pop event", "contents": "every_pop" },
		{ "trigger": "every_country		Fires a Country event", "contents": "every_country" },
		{ "trigger": "every_ship		Fires a Ship event", "contents": "every_ship" },
		{ "trigger": "every_planet		Executes on every planet", "contents": "every_planet" },
		{ "trigger": "add_influence		Adds influence to a county", "contents": "add_influence" },
		{ "trigger": "pop_add_ethic		Adds an ethic to a pop", "contents": "pop_add_ethic" },
		{ "trigger": "pop_remove_ethic		Removes an ethic to a pop", "contents": "pop_remove_ethic" },
		{ "trigger": "pop_migration		Sets the migration speed of a pop.", "contents": "pop_migration" },
		{ "trigger": "change_pop_species		Changes the species of a pop.", "contents": "change_pop_species" },
		{ "trigger": "create_rebels		Creates a new rebel country", "contents": "create_rebels" },
		{ "trigger": "cancel_terraformation		Cancels terraformation on the planet", "contents": "cancel_terraformation" },
		{ "trigger": "set_event_locked		Locks a fleet actively disabling it to do anything. Remember to unlock.", "contents": "set_event_locked" },
		{ "trigger": "clear_orders		Removes all orders from a fleet.", "contents": "clear_orders" },
		{ "trigger": "order_forced_return		Orders a fleet to move back into safe territory.", "contents": "order_forced_return" },
		{ "trigger": "declare_war		Declare A War.", "contents": "declare_war" },
		{ "trigger": "set_star_flag		Sets a flag on a star", "contents": "set_star_flag" },
		{ "trigger": "remove_star_flag		Removes a flag from a star", "contents": "remove_star_flag" },
		{ "trigger": "set_primitive_age		Sets a primitive age on a country", "contents": "set_primitive_age" },
		{ "trigger": "spawn_system		Spawns system with position relative to scope, parameters are system, min_distance(0), max_distance(100)", "contents": "spawn_system" },
		{ "trigger": "any_spaceport		Picks any spaceport", "contents": "any_spaceport" },
		{ "trigger": "any_research_station		Picks any research station", "contents": "any_research_station" },
		{ "trigger": "any_mining_station		Picks any mining station", "contents": "any_mining_station" },
		{ "trigger": "random_research_station		Picks a random research station", "contents": "random_research_station" },
		{ "trigger": "dismantle		Dismantles a station", "contents": "dismantle" },
		{ "trigger": "random_mining_station		Picks a random mining station", "contents": "random_mining_station" },
		{ "trigger": "random_spaceport		Picks a random spaceport", "contents": "random_spaceport" },
		{ "trigger": "random_system		Picks a random system", "contents": "random_system" },
		{ "trigger": "random_system_within_border		Picks a random system within border", "contents": "random_system_within_border" },
		{ "trigger": "random_army		Picks a random army", "contents": "random_army" },
		{ "trigger": "random_army_within_country		Executes on a random army belonging to country", "contents": "random_army_within_country" },
		{ "trigger": "set_advisor_active		Activate or deactivate an advisor", "contents": "set_advisor_active" },
		{ "trigger": "save_event_target_as		Save an event target", "contents": "save_event_target_as" },
		{ "trigger": "save_global_event_target_as		Save a global event target", "contents": "save_global_event_target_as" },
		{ "trigger": "clear_global_event_target		Clear a global event target", "contents": "clear_global_event_target" },
		{ "trigger": "clear_global_event_targets		Clear all global event targets", "contents": "clear_global_event_targets" },
		{ "trigger": "break		Break execution of effects", "contents": "break" },
		{ "trigger": "set_tutorial_level		Changes the tutorial level of a human of a country.", "contents": "set_tutorial_level" },
		{ "trigger": "begin_event_chain		Begins an event chain.", "contents": "begin_event_chain" },
		{ "trigger": "end_event_chain		Ends an event chain.", "contents": "end_event_chain" },
		{ "trigger": "queue_actions		Add actions to fleet's action queue", "contents": "queue_actions" },
		{ "trigger": "while		Repeats contained effects until limit fails or count is reached", "contents": "while" },
		{ "trigger": "clear_fleet_actions		Clears all fleet actions for fleet on the right side of =", "contents": "clear_fleet_actions" },
		{ "trigger": "destroy_fleet		Destroys fleet on the right side of =", "contents": "destroy_fleet" },
		{ "trigger": "create_ambient_object		Creates a new ambient object of type <type> at location <location>", "contents": "create_ambient_object" },
		{ "trigger": "destroy_ambient_object		Destroys an ambient object", "contents": "destroy_ambient_object" },
		{ "trigger": "add_trait		Adds a trait to a leader", "contents": "add_trait" },
		{ "trigger": "remove_trait		Removes a trait from a leader", "contents": "remove_trait" },
		{ "trigger": "modify_species		Creates a new modified species", "contents": "modify_species" },
		{ "trigger": "add_opinion_modifier		Gives an opinion modifier to an empire.", "contents": "add_opinion_modifier" },
		{ "trigger": "establish_contact		Country establishes contact with another country.", "contents": "establish_contact" },
		{ "trigger": "set_faction_hostility		Sets hostility stance of a faction", "contents": "set_faction_hostility" },
		{ "trigger": "random_system_planet		Picks a random planet within system", "contents": "random_system_planet" },
		{ "trigger": "add_event_chain_counter		Adds amount to event chain counter.", "contents": "add_event_chain_counter" },
		{ "trigger": "add_anomaly		Adds a specified anomaly to planet", "contents": "add_anomaly" },
		{ "trigger": "set_disable_at_health		Set the amount of health that a ship disables at", "contents": "set_disable_at_health" },
		{ "trigger": "add_building_construction		Adds a construction of specified building on tile.", "contents": "add_building_construction" },
		{ "trigger": "set_building		Adds a construction of specified building on tile.", "contents": "set_building" },
		{ "trigger": "remove_building		Removes building on tile.", "contents": "remove_building" },
		{ "trigger": "change_planet_size		Adds/Removes onto the size of the planet.", "contents": "change_planet_size" },
		{ "trigger": "set_blocker		Sets a specified blocker on tile.", "contents": "set_blocker" },
		{ "trigger": "remove_blocker		Removes blocker from tile. (bool)", "contents": "remove_blocker" },
		{ "trigger": "every_tile		Executes on every tile on planet", "contents": "every_tile" },
		{ "trigger": "random_tile		Executes on a random tile on planet", "contents": "random_tile" },
		{ "trigger": "every_neighboring_tile		Executes on every neighboring tile on planet", "contents": "every_neighboring_tile" },
		{ "trigger": "random_neighboring_tile		Executes on a random neighboring tile on planet", "contents": "random_neighboring_tile" },
		{ "trigger": "set_disabled		Used to enable or disable a ship", "contents": "set_disabled" },
		{ "trigger": "create_point_of_interest		Creates point of interest", "contents": "create_point_of_interest" },
		{ "trigger": "remove_point_of_interest		Removed point of interest.", "contents": "remove_point_of_interest" },
		{ "trigger": "set_relation_flag		Sets a relation flag.", "contents": "set_relation_flag" },
		{ "trigger": "remove_relation_flag		Removes a relation flag.", "contents": "remove_relation_flag" },
		{ "trigger": "random_moon		Executes on all moons", "contents": "random_moon" },
		{ "trigger": "every_moon		Executes on all moons", "contents": "every_moon" },
		{ "trigger": "every_system_in_cluster		Switches scope and goes through all systems in a cluster", "contents": "every_system_in_cluster" },
		{ "trigger": "create_cluster		Creates a cluster centered around the specified spatial object", "contents": "create_cluster" },
		{ "trigger": "kill_leader		Kills leaders of specified types. kill_leader = { type = general type = scientist etc. }", "contents": "kill_leader" },
		{ "trigger": "assign_leader		Assigns a leader to either a fleet, army, or pop faction", "contents": "assign_leader" },
		{ "trigger": "country_add_ethic		Adds an ethic to a country", "contents": "country_add_ethic" },
		{ "trigger": "country_remove_ethic		Removes an ethic from a country", "contents": "country_remove_ethic" },
		{ "trigger": "set_timed_country_flag		Sets a timed flag on a country", "contents": "set_timed_country_flag" },
		{ "trigger": "set_timed_fleet_flag		Sets a timed flag on a fleet (Not used in vanilla, but confirmed working)", "contents": "set_timed_fleet_flag" },
		{ "trigger": "set_timed_global_flag		Sets a timed global flag", "contents": "set_timed_global_flag" },
		{ "trigger": "set_timed_planet_flag		Sets a timed flag on a planet", "contents": "set_timed_planet_flag" },
		{ "trigger": "set_timed_pop_flag		Sets a timed flag on a pop", "contents": "set_timed_pop_flag" },
		{ "trigger": "set_timed_relation_flag		Sets a timed relation flag", "contents": "set_timed_relation_flag" },
		{ "trigger": "set_timed_ship_flag		Sets a timed flag on a ship", "contents": "set_timed_ship_flag" },
		{ "trigger": "set_timed_star_flag		Sets a timed flag on a star", "contents": "set_timed_star_flag" },
		{ "trigger": "remove_army		Removes scope army.", "contents": "remove_army" },
		{ "trigger": "prevent_anomaly		Sets if this planet will generate new anomalies.", "contents": "prevent_anomaly" },
		{ "trigger": "every_planet_within_border		Executes on every planet within country border", "contents": "every_planet_within_border" },
		{ "trigger": "every_planet_army		Picks every army", "contents": "every_planet_army" },
		{ "trigger": "every_army_within_country		Executes on all armies belonging to country", "contents": "every_army_within_country" },
		{ "trigger": "observation_outpost_owner		Picks the observation station owner", "contents": "observation_outpost_owner" },
		{ "trigger": "observation_outpost		Picks the observation station", "contents": "observation_outpost" },
		{ "trigger": "add_deposit		Adds a deposit to a tile", "contents": "add_deposit" },
		{ "trigger": "clear_deposits		Removes all deposits from a tile", "contents": "clear_deposits" },
		{ "trigger": "every_rim_system		Executes on every system on the galactic rim", "contents": "every_rim_system" },
		{ "trigger": "random_rim_system		Executes on a random system on the galactic rim", "contents": "random_rim_system" },
		{ "trigger": "purge		Starts/stops purging pops", "contents": "purge" },
		{ "trigger": "set_planet_max_health		Sets the maximum health of a planet", "contents": "set_planet_max_health" },
		{ "trigger": "set_planet_health		Sets the current health of a planet", "contents": "set_planet_health" },
		{ "trigger": "remove_modifier		Removes a specific modifier from a planet.", "contents": "remove_modifier" },
		{ "trigger": "set_country_type		Changes country type", "contents": "set_country_type" },
		{ "trigger": "add_ship_design		Adds a ship design to a country!", "contents": "add_ship_design" },
		{ "trigger": "add_mission_progress		Adds progress to a mission", "contents": "add_mission_progress" },
		{ "trigger": "create_army_transport		Creates a new army in space", "contents": "create_army_transport" },
		{ "trigger": "set_spaceport_module		Sets a spaceport module at specified slot", "contents": "set_spaceport_module" },
		{ "trigger": "create_spaceport		Creates a spaceport around planet", "contents": "create_spaceport" },
		{ "trigger": "set_spaceport_level		Sets the level of the spaceport", "contents": "set_spaceport_level" },
		{ "trigger": "switch		Switches effect based on triggers", "contents": "switch" },
		{ "trigger": "set_age		Changes the age of the leader", "contents": "set_age" },
		{ "trigger": "create_wormhole_station		Creates a wormhole station", "contents": "create_wormhole_station" },
		{ "trigger": "set_pop_faction		Makes a pop join a faction", "contents": "set_pop_faction" },
		{ "trigger": "create_pop_faction		Creates a pop faction", "contents": "create_pop_faction" },
		{ "trigger": "add_support		Adds to a pop factions Support level", "contents": "add_support" },
		{ "trigger": "set_support		Sets a pop factions Support level", "contents": "set_support" },
		{ "trigger": "set_graphical_culture		Sets country graphical culture", "contents": "set_graphical_culture" },
		{ "trigger": "set_formation_scale		Set formation scale on a fleet", "contents": "set_formation_scale" },
		{ "trigger": "set_controller		Sets the controller of a planet", "contents": "set_controller" },
		{ "trigger": "force_faction_evaluation		Forces a pop to evaluate factions", "contents": "force_faction_evaluation" },
		{ "trigger": "enable_faction_of_type		Forces a country to evaluate potential factions of a specific type right now. this would otherwise occur once a month", "contents": "enable_faction_of_type" },
		{ "trigger": "clear_uncharted_space		Clears US for country", "contents": "clear_uncharted_space" },
		{ "trigger": "every_owned_leader		Switches Scope to and goes through all owned leader", "contents": "every_owned_leader" },
		{ "trigger": "random_owned_leader		Picks a random owned leader", "contents": "random_owned_leader" },
		{ "trigger": "establish_communications		Establish communications between empires.", "contents": "establish_communications" },
		{ "trigger": "add_monthly_resource_mult		Adds multiple amount of monthly income of resource to country", "contents": "add_monthly_resource_mult" },
		{ "trigger": "set_leader_flag		Sets a flag on a leader", "contents": "set_leader_flag" },
		{ "trigger": "remove_leader_flag		Removes a flag from a leader", "contents": "remove_leader_flag" },
		{ "trigger": "add_research_option		Gives a specific tech to an empire and makes it always available for research.", "contents": "add_research_option" },
		{ "trigger": "load_parameters		Clears current parameters and loads new parameters from target", "contents": "load_parameters" },
		{ "trigger": "set_heir		Change the country heir.", "contents": "set_heir" },
		{ "trigger": "set_pop_faction_flag		Sets a flag on a pop", "contents": "set_pop_faction_flag" },
		{ "trigger": "remove_pop_faction_flag		Removes a flag from a pop", "contents": "remove_pop_faction_flag" },
		{ "trigger": "set_timed_pop_faction_flag		Sets a timed flag on a pop faction", "contents": "set_timed_pop_faction_flag" },
		{ "trigger": "declare_white_peace_with		Declare white peace with target country.", "contents": "declare_white_peace_with" },
		{ "trigger": "leave_alliance		Leave any alliance/federation with country", "contents": "leave_alliance" },
		{ "trigger": "create_sector		Creates a sector", "contents": "create_sector" },
		{ "trigger": "random_owned_pop		Picks a random pop", "contents": "random_owned_pop" },
		{ "trigger": "set_policy		Sets a policy to a specific value", "contents": "set_policy" },
		{ "trigger": "recruitable		Sets recruitable tag on leader.", "contents": "recruitable" },
		{ "trigger": "add_tech_progress		Gives a specific modifier to a planet.", "contents": "add_tech_progress" },
		{ "trigger": "closest_system		Switches scope to closest system that passes limit", "contents": "closest_system" },
		{ "trigger": "random_sector		Executes on a random sector in the country", "contents": "random_sector" },
		{ "trigger": "every_sector		Executes on every sector in the country", "contents": "every_sector" },
		{ "trigger": "random_owned_fleet		Switches Scope to and goes through random owned fleet", "contents": "random_owned_fleet" },
		{ "trigger": "random_ambient_object		Executes effects on every ambient object that passes limit", "contents": "random_ambient_object" },
		{ "trigger": "random_system_ambient_object		Executes effects on every ambient object in system that passes limit", "contents": "random_system_ambient_object" },
		{ "trigger": "every_ambient_object		Executes effects on every ambient object that passes limit", "contents": "every_ambient_object" },
		{ "trigger": "every_system_ambient_object		Executes effects on every ambient object in system that passes limit", "contents": "every_system_ambient_object" },
		{ "trigger": "set_ambient_object_flag		Sets a flag on a AmbientObject", "contents": "set_ambient_object_flag" },
		{ "trigger": "set_timed_ambient_object_flag		Sets a timed flag on a ambient object", "contents": "set_timed_ambient_object_flag" },
		{ "trigger": "remove_ambient_object_flag		Removes a flag from a AmbientObject", "contents": "remove_ambient_object_flag" },
		{ "trigger": "every_fleet_in_system		Switches scope to and goes through all fleets in the system", "contents": "every_fleet_in_system" },
		{ "trigger": "random_fleet_in_system		Switches scope to a random fleet in system", "contents": "random_fleet_in_system" },
		{ "trigger": "set_aggro_range		Sets aggro range on a fleet or a country", "contents": "set_aggro_range" },
		{ "trigger": "set_fleet_stance		Sets the stance of scope fleet. valid stances are aggressive, passive and evasive", "contents": "set_fleet_stance" },
		{ "trigger": "set_aggro_range_measure_from		Sets where aggro range is measured from on a fleet or a country. valid targets: self, return_point", "contents": "set_aggro_range_measure_from" },
		{ "trigger": "set_ruined		Sets the ruined status of a building", "contents": "set_ruined" },
		{ "trigger": "random_neighbor_country		Picks a random neighbor country", "contents": "random_neighbor_country" },
		{ "trigger": "establish_communications_no_message		Establish communications between empires.", "contents": "establish_communications_no_message" },
		{ "trigger": "set_subject_of		Sets the scope country's overlord to target", "contents": "set_subject_of" },
		{ "trigger": "abort_special_project		Aborts a special research project for a country", "contents": "abort_special_project" },
		{ "trigger": "unassign_leader		Unassigns a leader from scope", "contents": "unassign_leader" },
		{ "trigger": "exile_leader_as		Exiles a leader and saves him associated to a custom name", "contents": "exile_leader_as" },
		{ "trigger": "set_leader		Sets a leader from a previously exiled leader associated by a custom name", "contents": "set_leader" },
		{ "trigger": "add_skill		Adds amount of skill levels to scope leader", "contents": "add_skill" },
		{ "trigger": "set_skill		Sets skill levels to scope leader", "contents": "set_skill" },
		{ "trigger": "every_neighbor_system		Executes on every neighboring system", "contents": "every_neighbor_system" },
		{ "trigger": "random_neighbor_system		Executes on a random neighboring system", "contents": "random_neighbor_system" },
		{ "trigger": "set_federation_leader		Sets a country to lead a federation", "contents": "set_federation_leader" },
		{ "trigger": "add_colony_progress		Add progress to a colony", "contents": "add_colony_progress" },
		{ "trigger": "start_colony		Starts a colony", "contents": "start_colony" },
		{ "trigger": "remove_opinion_modifier		Removes an opinion modifier to an empire.", "contents": "remove_opinion_modifier" },
		{ "trigger": "add_war_demand		Adds a war demand to a rebel country", "contents": "add_war_demand" },
		{ "trigger": "change_country_flag		Changes the flag of a country", "contents": "change_country_flag" },
		{ "trigger": "every_pop_faction		Executes on every pop faction of country", "contents": "every_pop_faction" },
		{ "trigger": "random_pop_faction		Executes on a random pop faction of country", "contents": "random_pop_faction" },
		{ "trigger": "kill_pop_faction		Deletes a pop faction", "contents": "kill_pop_faction" },
		{ "trigger": "add_threat		Adds threat", "contents": "add_threat" },
		{ "trigger": "remove_sector		Removes a sector.", "contents": "remove_sector" },
		{ "trigger": "set_mission		Sets the current mission of an observation station", "contents": "set_mission" },
		{ "trigger": "remove_spaceport_module		Removes a spaceport module from a spaceport. Argument is either a spaceport module slot number or a spaceport module tag", "contents": "remove_spaceport_module" },
		{ "trigger": "change_dominant_species		Changes the dominant species of the current Country", "contents": "change_dominant_species" },
		{ "trigger": "create_military_fleet		Creates a military fleet with the designs of a specified country.", "contents": "create_military_fleet" },
		{ "trigger": "any_attacker		Scopes to the attacker and all co-belligerents in this war.", "contents": "any_attacker" },
		{ "trigger": "any_bordering_country		Scopes to all countries whose borders are near this system.", "contents": "any_bordering_country" },
		{ "trigger": "any_controlled_planet		Scopes to all planets owned or occupied by this country.", "contents": "any_controlled_planet" },
		{ "trigger": "any_country		Scopes to all countries in the galaxy.", "contents": "any_country" },
		{ "trigger": "any_defender		Scopes to the defender and all co-belligerents in this war.", "contents": "any_defender" },
		{ "trigger": "any_moon		Scopes to all of this planet's moons.", "contents": "any_moon" },
		{ "trigger": "any_neighbor_country		Scopes to all countries bordering this one.", "contents": "any_neighbor_country" },
		{ "trigger": "any_neighbor_system		Scopes to all systems near this one.", "contents": "any_neighbor_system" },
		{ "trigger": "any_neighboring_tile		Scopes to all tiles adjacent to this one.", "contents": "any_neighboring_tile" },
		{ "trigger": "any_owned_fleet		Scopes to all fleets belonging to this country.", "contents": "any_owned_fleet" },
		{ "trigger": "any_owned_leader		Scopes to all of this country's leaders.", "contents": "any_owned_leader" },
		{ "trigger": "any_owned_planet		Scopes to all planets owned by this country.", "contents": "any_owned_planet" },
		{ "trigger": "any_owned_pop		Scopes to all pops belonging to this country.", "contents": "any_owned_pop" },
		{ "trigger": "any_owned_ship		Scopes to all ships and stations belonging to this country.", "contents": "any_owned_ship" },
		{ "trigger": "any_planet		Scopes to all planets in ''this system'' (unlike random_ and every_planet, which search all planets in the galaxy).", "contents": "any_planet" },
		{ "trigger": "any_planet_within_border		Scopes to all planets within this country's borders.", "contents": "any_planet_within_border" },
		{ "trigger": "any_pop		Scopes to all pops on this planet.", "contents": "any_pop" },
		{ "trigger": "any_sector		Scopes to of this country's sectors.", "contents": "any_sector" },
		{ "trigger": "any_ship		Scopes to all ships in this fleet.", "contents": "any_ship" },
		{ "trigger": "any_ship_in_system		Scopes to ships in this system.", "contents": "any_ship_in_system" },
		{ "trigger": "any_system		Scopes to all systems in the galaxy.", "contents": "any_system" },
		{ "trigger": "any_system_within_border		Scopes to any system within the current country's borders.", "contents": "any_system_within_border" },
		{ "trigger": "any_tile		Scopes to all tiles on this planet.", "contents": "any_tile" },
		{ "trigger": "any_war		Scopes to all wars involving this country.", "contents": "any_war" },
		{ "trigger": "best_tile_for_pop		Scopes to the best tile for a pop on this planet.", "contents": "best_tile_for_pop" },
		{ "trigger": "capital_scope		Scopes to the capital planet of this country. (for trigger scope to the capital see: home_planet)", "contents": "capital_scope" },
		{ "trigger": "closest_system		Scopes to the closest system to this planet", "contents": "closest_system" },
		{ "trigger": "every_country		Scopes to all countries in the galaxy.", "contents": "every_country" },
		{ "trigger": "every_fleet_in_system		Scopes to every fleet in this system.", "contents": "every_fleet_in_system" },
		{ "trigger": "every_neighboring_tile		Scopes to all tiles adjacent to this one.", "contents": "every_neighboring_tile" },
		{ "trigger": "every_owned_planet		Scopes to all planets owned by this country.", "contents": "every_owned_planet" },
		{ "trigger": "every_owned_pop		Scopes to all pops belonging to this country.", "contents": "every_owned_pop" },
		{ "trigger": "every_owned_ship		Scopes to all ships owned by this country.", "contents": "every_owned_ship" },
		{ "trigger": "every_planet		Scopes to all planets in the galaxy.", "contents": "every_planet" },
		{ "trigger": "every_planet_army		Scopes to all armies on this planet.", "contents": "every_planet_army" },
		{ "trigger": "every_pop_faction		Scopes to all factions in this country.", "contents": "every_pop_faction" },
		{ "trigger": "every_system_ambient_object		Scopes to all ambient objects in this system.", "contents": "every_system_ambient_object" },
		{ "trigger": "every_system_planet		Scopes to all planets in this system.", "contents": "every_system_planet" },
		{ "trigger": "every_tile		Scopes to all tiles on this planet.", "contents": "every_tile" },
		{ "trigger": "fleet		Scopes to the fleet this ship belongs to.", "contents": "fleet" },
		{ "trigger": "last_created_ambient_object		Scopes to the last created ambient_object.", "contents": "last_created_ambient_object" },
		{ "trigger": "last_created_country		Scopes to the last created country.", "contents": "last_created_country" },
		{ "trigger": "last_created_fleet		Scopes to the last created fleet.", "contents": "last_created_fleet" },
		{ "trigger": "last_created_leader		Scopes to the last created leader.", "contents": "last_created_leader" },
		{ "trigger": "last_created_pop		Scopes to the last created pop.", "contents": "last_created_pop" },
		{ "trigger": "last_created_species		Scopes to the last created species.", "contents": "last_created_species" },
		{ "trigger": "leader		Scopes to the leader of this ship/planet/country.", "contents": "leader" },
		{ "trigger": "orbit		Scopes to the planet this fleet is orbiting. (does not work for ship!)", "contents": "orbit" },
		{ "trigger": "orbital_deposit_tile		Scopes to the orbital tile of this planet.", "contents": "orbital_deposit_tile" },
		{ "trigger": "owner		Scopes to the owner country of this ship or Pop.", "contents": "owner" },
		{ "trigger": "owner_species		Scopes to the owner species of this country.", "contents": "owner_species" },
		{ "trigger": "random_army		Scopes to a random army.", "contents": "random_army" },
		{ "trigger": "random_country		Scopes to a random country.", "contents": "random_country" },
		{ "trigger": "random_moon		Scopes to a random moon orbiting this planet.", "contents": "random_moon" },
		{ "trigger": "random_neighbor_country		Scopes to a random country bordering this one.", "contents": "random_neighbor_country" },
		{ "trigger": "random_neighboring_tile		Scopes to a random tile adjacent to this one.", "contents": "random_neighboring_tile" },
		{ "trigger": "random_owned_leader		Scopes to a random leader belonging to this country.", "contents": "random_owned_leader" },
		{ "trigger": "random_owned_planet		Scopes to a random planet owned by this country.", "contents": "random_owned_planet" },
		{ "trigger": "random_owned_pop		Scopes to a random pop belonging to this country.", "contents": "random_owned_pop" },
		{ "trigger": "random_owned_ship		Scopes to a random ship or station belonging to this country.", "contents": "random_owned_ship" },
		{ "trigger": "random_planet		Scopes to a random planet anywhere in the galaxy.", "contents": "random_planet" },
		{ "trigger": "random_pop		Scopes to a random pop on this planet.", "contents": "random_pop" },
		{ "trigger": "random_pop_faction		Scopes to a random faction in this country.", "contents": "random_pop_faction" },
		{ "trigger": "random_rim_system		Scopes to a random system on the outer rim of the galaxy.", "contents": "random_rim_system" },
		{ "trigger": "random_system		Scopes to a random system anywhere in the galaxy.", "contents": "random_system" },
		{ "trigger": "random_system_ambient_object		Scopes to a random ambient object in this system.", "contents": "random_system_ambient_object" },
		{ "trigger": "random_system_planet		Scopes to a random planet in this system.", "contents": "random_system_planet" },
		{ "trigger": "random_tile		Scopes to a random tile on this planet.", "contents": "random_tile" },
		{ "trigger": "solar_system		Scopes to system this country/ship/planet is in.", "contents": "solar_system" },
		{ "trigger": "space_owner		Scopes to owning country of this system.", "contents": "space_owner" },
		{ "trigger": "pop_faction		Scopes to the faction of this pop", "contents": "pop_faction" },
		{ "trigger": "planet		Scopes to the planet of a pop", "contents": "planet" },
		{ "trigger": "home_planet		Scopes to the home planet of country (for effect scope to the home_planet see: capital_scope)", "contents": "home_planet" },
		{ "trigger": "observation_outpost_owner		Scopes to the owner of the observation outpost of a planet", "contents": "observation_outpost_owner" },
		{ "trigger": "observation_outpost		Scopes to the observation outpost of a planet", "contents": "observation_outpost" },



		{ "trigger": "immediate	immediate = { effects }", "contents": "immediate = { \n\t$1\n }" },
		{ "trigger": "trigger	trigger = { conditions }", "contents": "trigger = { \n\t$1\n }" },
		{ "trigger": "limit	limit = { conditions }", "contents": "limit = { $1 }" },
		{ "trigger": "is_triggered_only", "contents": "is_triggered_only = ${1:yes}" },
		{ "trigger": "option", "contents": "option = {\n\tname = ${1:OK}\n$2\n}" },

		{ "trigger": "country_event		Fires a Country event"        , "contents": "country_event = { id = $1 }" },
		{ "trigger": "planet_event		Fires a Planet event"         , "contents": "planet_event = { id = $1 }" },
		{ "trigger": "ship_event		Fires a Ship event"           , "contents": "ship_event = { id = $1 }" },	
		{ "trigger": "pop_event		Fires a Pop event"                , "contents": "pop_event = { id = $1 }" },
		{ "trigger": "fleet_event		Fires a Fleet event"          , "contents": "fleet_event = { id = $1 }" },
		{ "trigger": "pop_faction_event		Fires a Pop faction event", "contents": "pop_faction_event = { id = $1 }" },

		{ "trigger": "country_event		Country event { }-block",         "contents": "country_event = {\n\tid = $1\n\thide_window = $2\n\tis_triggered_only = $3\n$4\n}"},
		{ "trigger": "planet_event		Planet event { }-block",          "contents": "planet_event = {\n\tid = $1\n\thide_window = $2\n\tis_triggered_only = $3\n$4\n}"},
		{ "trigger": "ship_event		Ship event { }-block",            "contents": "ship_event = {\n\tid = $1\n\thide_window = $2\n\tis_triggered_only = $3\n$4\n}"},
		{ "trigger": "pop_event		Pop event { }-block",                 "contents": "pop_event = {\n\tid = $1\n\thide_window = $2\n\tis_triggered_only = $3\n$4\n}"},
		{ "trigger": "fleet_event		Fleet event { }-block",           "contents": "fleet_event = {\n\tid = $1\n\thide_window = $2\n\tis_triggered_only = $3\n$4\n}"},
		{ "trigger": "pop_faction_event		Pop faction event { }-block", "contents": "pop_faction_event = {\n\tid = $1\n\thide_window = $2\n\tis_triggered_only = $3\n$4\n}"}

	]

}